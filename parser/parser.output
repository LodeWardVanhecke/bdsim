Terminals which are not used

   DIPOLE
   SOLENOID
   COLLIMATOR
   SPOILER
   ABSORBER
   APERTURE
   FILENAME
   GAS
   PIPE
   VALUE
   PRINTF
   FOR


State 56 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | input stmt ';'

    3 stmt: if_clause stmt
    4     | if_clause stmt ELSE stmt
    5     | atomic_stmt
    6     | BEGN input END

    7 if_clause: IF '(' aexpr ')'

    8 atomic_stmt: /* empty */
    9            | expr
   10            | command
   11            | decl

   12 decl: VARIABLE ':' marker
   13     | VARIABLE ':' drift
   14     | VARIABLE ':' sbend
   15     | VARIABLE ':' quad
   16     | VARIABLE ':' sextupole
   17     | VARIABLE ':' octupole
   18     | VARIABLE ':' rcol
   19     | VARIABLE ':' ecol
   20     | VARIABLE ':' multipole
   21     | VARIABLE ':' element
   22     | VARIABLE ':' laser
   23     | VARIABLE ':' line
   24     | VARIABLE ':' sequence
   25     | VARIABLE ':' extension

   26 marker: MARKER

   27 drift: DRIFT parameters

   28 sbend: SBEND parameters

   29 quad: QUADRUPOLE parameters

   30 sextupole: SEXTUPOLE parameters

   31 octupole: OCTUPOLE parameters

   32 multipole: MULTIPOLE parameters

   33 ecol: ECOL parameters

   34 rcol: RCOL parameters

   35 laser: LASER parameters

   36 element: ELEMENT parameters

   37 extension: VARIABLE parameters

   38 parameters: /* empty */
   39           | parameters ',' VARIABLE '=' aexpr
   40           | parameters ',' VARIABLE '=' vecexpr
   41           | VARIABLE '=' vecexpr
   42           | VARIABLE '=' aexpr
   43           | parameters ',' VARIABLE '=' STR
   44           | VARIABLE '=' STR

   45 line: LINE '=' '(' element_seq ')'

   46 sequence: SEQUENCE

   47 element_seq: /* empty */
   48            | element_seq ',' VARIABLE
   49            | element_seq ',' VARIABLE '*' NUMBER
   50            | element_seq ',' NUMBER '*' VARIABLE
   51            | VARIABLE
   52            | VARIABLE '*' NUMBER
   53            | NUMBER '*' VARIABLE

   54 expr: aexpr
   55     | vecexpr
   56     | assignment

   57 aexpr: NUMBER
   58      | VARIABLE
   59      | FUNC '(' aexpr ')'
   60      | aexpr '+' aexpr
   61      | aexpr '-' aexpr
   62      | aexpr '*' aexpr
   63      | aexpr '/' aexpr
   64      | aexpr '^' aexpr
   65      | '-' aexpr
   66      | '+' aexpr
   67      | '(' aexpr ')'
   68      | '<' vecexpr ',' vecexpr '>'
   69      | aexpr '<' aexpr
   70      | aexpr LE aexpr
   71      | aexpr '>' aexpr
   72      | aexpr GE aexpr
   73      | aexpr NE aexpr
   74      | VARIABLE '[' VARIABLE ']'

   75 assignment: VARIABLE '=' aexpr
   76           | VARIABLE '=' vecexpr
   77           | VECVAR '=' vecexpr

   78 vecexpr: VECVAR
   79        | vect
   80        | vecexpr '+' vecexpr
   81        | vecexpr '-' vecexpr
   82        | vecexpr '+' aexpr
   83        | vecexpr '*' aexpr
   84        | vecexpr '/' aexpr
   85        | aexpr '+' vecexpr
   86        | aexpr '-' vecexpr
   87        | aexpr '*' vecexpr

   88 vect: '{' numbers '}'

   89 numbers: /* empty */
   90        | numbers ',' aexpr
   91        | aexpr

   92 command: STOP
   93        | BEAM ',' beam_parameters
   94        | PRINT
   95        | PRINT ',' LINE
   96        | PRINT ',' OPTION
   97        | PRINT ',' VARIABLE
   98        | PRINT ',' VECVAR
   99        | USE ',' use_parameters
  100        | OPTION ',' option_parameters
  101        | ECHO STR
  102        | SAMPLE ',' sample_options
  103        | CSAMPLE ',' csample_options

  104 use_parameters: PERIOD '=' VARIABLE
  105               | PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE

  106 sample_options: RANGE '=' VARIABLE
  107               | RANGE '=' VARIABLE '[' NUMBER ']'

  108 csample_options: VARIABLE '=' aexpr
  109                | VARIABLE '=' STR
  110                | csample_options ',' VARIABLE '=' aexpr
  111                | csample_options ',' VARIABLE '=' STR
  112                | sample_options ',' csample_options
  113                | sample_options

  114 option_parameters: /* empty */
  115                  | option_parameters ',' VARIABLE '=' aexpr
  116                  | VARIABLE '=' aexpr

  117 beam_parameters: /* empty */
  118                | beam_parameters ',' VARIABLE '=' aexpr
  119                | VARIABLE '=' aexpr
  120                | beam_parameters ',' VARIABLE '=' STR
  121                | VARIABLE '=' STR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 45 59 67
')' (41) 7 45 59 67
'*' (42) 49 50 52 53 62 83 87
'+' (43) 60 66 80 82 85
',' (44) 39 40 43 48 49 50 68 90 93 95 96 97 98 99 100 102 103 105
    110 111 112 115 118 120
'-' (45) 61 65 81 86
'/' (47) 63 84 105
':' (58) 12 13 14 15 16 17 18 19 20 21 22 23 24 25
';' (59) 2
'<' (60) 68 69
'=' (61) 39 40 41 42 43 44 45 75 76 77 104 105 106 107 108 109 110
    111 115 116 118 119 120 121
'>' (62) 68 71
'[' (91) 74 107
']' (93) 74 107
'^' (94) 64
'{' (123) 88
'}' (125) 88
error (256)
GE (258) 72
LE (259) 70
NE (260) 73
UMINUS (261)
UPLUS (262)
NUMBER (263) 49 50 52 53 57 107
VARIABLE (264) 12 13 14 15 16 17 18 19 20 21 22 23 24 25 37 39 40 41
    42 43 44 48 49 50 51 52 53 58 74 75 76 97 104 105 106 107 108 109
    110 111 115 116 118 119 120 121
VECVAR (265) 77 78 98
FUNC (266) 59
STR (267) 43 44 101 109 111 120 121
MARKER (268) 26
ELEMENT (269) 36
DRIFT (270) 27
DIPOLE (271)
SBEND (272) 28
QUADRUPOLE (273) 29
SEXTUPOLE (274) 30
OCTUPOLE (275) 31
MULTIPOLE (276) 32
SOLENOID (277)
COLLIMATOR (278)
RCOL (279) 34
ECOL (280) 33
LINE (281) 45 95
SEQUENCE (282) 46
SPOILER (283)
ABSORBER (284)
LASER (285) 35
PERIOD (286) 104 105
APERTURE (287)
FILENAME (288)
GAS (289)
PIPE (290)
BEAM (291) 93
OPTION (292) 96 100
PRINT (293) 94 95 96 97 98
RANGE (294) 105 106 107
STOP (295) 92
USE (296) 99
VALUE (297)
ECHO (298) 101
PRINTF (299)
SAMPLE (300) 102
CSAMPLE (301) 103
IF (302) 7
ELSE (303) 4
BEGN (304) 6
END (305) 6
FOR (306)


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
input (70)
    on left: 1 2, on right: 0 2 6
stmt (71)
    on left: 3 4 5 6, on right: 2 3 4
if_clause (72)
    on left: 7, on right: 3 4
atomic_stmt (73)
    on left: 8 9 10 11, on right: 5
decl (74)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25,
    on right: 11
marker (75)
    on left: 26, on right: 12
drift (76)
    on left: 27, on right: 13
sbend (77)
    on left: 28, on right: 14
quad (78)
    on left: 29, on right: 15
sextupole (79)
    on left: 30, on right: 16
octupole (80)
    on left: 31, on right: 17
multipole (81)
    on left: 32, on right: 20
ecol (82)
    on left: 33, on right: 19
rcol (83)
    on left: 34, on right: 18
laser (84)
    on left: 35, on right: 22
element (85)
    on left: 36, on right: 21
extension (86)
    on left: 37, on right: 25
parameters (87)
    on left: 38 39 40 41 42 43 44, on right: 27 28 29 30 31 32 33 34
    35 36 37 39 40 43
line (88)
    on left: 45, on right: 23
sequence (89)
    on left: 46, on right: 24
element_seq (90)
    on left: 47 48 49 50 51 52 53, on right: 45 48 49 50
expr (91)
    on left: 54 55 56, on right: 9
aexpr (92)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
   , on right: 7 39 42 54 59 60 61 62 63 64 65 66 67 69 70 71 72 73
    75 82 83 84 85 86 87 90 91 108 110 115 116 118 119
assignment (93)
    on left: 75 76 77, on right: 56
vecexpr (94)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 40 41 55 68 76
    77 80 81 82 83 84 85 86 87
vect (95)
    on left: 88, on right: 79
numbers (96)
    on left: 89 90 91, on right: 88 90
command (97)
    on left: 92 93 94 95 96 97 98 99 100 101 102 103,
    on right: 10
use_parameters (98)
    on left: 104 105, on right: 99
sample_options (99)
    on left: 106 107, on right: 102 112 113
csample_options (100)
    on left: 108 109 110 111 112 113, on right: 103 110 111 112
option_parameters (101)
    on left: 114 115 116, on right: 100 115
beam_parameters (102)
    on left: 117 118 119 120 121, on right: 93 118 120


state 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


state 1

    0 $accept: input . $end
    2 input: input . stmt ';'

    $end      shift, and go to state 2
    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    VECVAR    shift, and go to state 8
    FUNC      shift, and go to state 9
    BEAM      shift, and go to state 10
    OPTION    shift, and go to state 11
    PRINT     shift, and go to state 12
    STOP      shift, and go to state 13
    USE       shift, and go to state 14
    ECHO      shift, and go to state 15
    SAMPLE    shift, and go to state 16
    CSAMPLE   shift, and go to state 17
    IF        shift, and go to state 18
    BEGN      shift, and go to state 19
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 8 (atomic_stmt)

    stmt         go to state 22
    if_clause    go to state 23
    atomic_stmt  go to state 24
    decl         go to state 25
    expr         go to state 26
    aexpr        go to state 27
    assignment   go to state 28
    vecexpr      go to state 29
    vect         go to state 30
    command      go to state 31


state 2

    0 $accept: input $end .

    $default  accept


state 3

   66 aexpr: '+' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 33


state 4

   65 aexpr: '-' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 34


state 5

   68 aexpr: '<' . vecexpr ',' vecexpr '>'

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 36
    vecexpr  go to state 37
    vect     go to state 30


state 6

   57 aexpr: NUMBER .

    $default  reduce using rule 57 (aexpr)


state 7

   12 decl: VARIABLE . ':' marker
   13     | VARIABLE . ':' drift
   14     | VARIABLE . ':' sbend
   15     | VARIABLE . ':' quad
   16     | VARIABLE . ':' sextupole
   17     | VARIABLE . ':' octupole
   18     | VARIABLE . ':' rcol
   19     | VARIABLE . ':' ecol
   20     | VARIABLE . ':' multipole
   21     | VARIABLE . ':' element
   22     | VARIABLE . ':' laser
   23     | VARIABLE . ':' line
   24     | VARIABLE . ':' sequence
   25     | VARIABLE . ':' extension
   58 aexpr: VARIABLE .
   74      | VARIABLE . '[' VARIABLE ']'
   75 assignment: VARIABLE . '=' aexpr
   76           | VARIABLE . '=' vecexpr

    ':'  shift, and go to state 38
    '='  shift, and go to state 39
    '['  shift, and go to state 40

    $default  reduce using rule 58 (aexpr)


state 8

   77 assignment: VECVAR . '=' vecexpr
   78 vecexpr: VECVAR .

    '='  shift, and go to state 41

    $default  reduce using rule 78 (vecexpr)


state 9

   59 aexpr: FUNC . '(' aexpr ')'

    '('  shift, and go to state 42


state 10

   93 command: BEAM . ',' beam_parameters

    ','  shift, and go to state 43


state 11

  100 command: OPTION . ',' option_parameters

    ','  shift, and go to state 44


state 12

   94 command: PRINT .
   95        | PRINT . ',' LINE
   96        | PRINT . ',' OPTION
   97        | PRINT . ',' VARIABLE
   98        | PRINT . ',' VECVAR

    ','  shift, and go to state 45

    $default  reduce using rule 94 (command)


state 13

   92 command: STOP .

    $default  reduce using rule 92 (command)


state 14

   99 command: USE . ',' use_parameters

    ','  shift, and go to state 46


state 15

  101 command: ECHO . STR

    STR  shift, and go to state 47


state 16

  102 command: SAMPLE . ',' sample_options

    ','  shift, and go to state 48


state 17

  103 command: CSAMPLE . ',' csample_options

    ','  shift, and go to state 49


state 18

    7 if_clause: IF . '(' aexpr ')'

    '('  shift, and go to state 50


state 19

    6 stmt: BEGN . input END

    $default  reduce using rule 1 (input)

    input  go to state 51


state 20

   67 aexpr: '(' . aexpr ')'

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 52


state 21

   88 vect: '{' . numbers '}'

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    $default  reduce using rule 89 (numbers)

    aexpr    go to state 53
    numbers  go to state 54


state 22

    2 input: input stmt . ';'

    ';'  shift, and go to state 55


state 23

    3 stmt: if_clause . stmt
    4     | if_clause . stmt ELSE stmt

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    VECVAR    shift, and go to state 8
    FUNC      shift, and go to state 9
    BEAM      shift, and go to state 10
    OPTION    shift, and go to state 11
    PRINT     shift, and go to state 12
    STOP      shift, and go to state 13
    USE       shift, and go to state 14
    ECHO      shift, and go to state 15
    SAMPLE    shift, and go to state 16
    CSAMPLE   shift, and go to state 17
    IF        shift, and go to state 18
    BEGN      shift, and go to state 19
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 8 (atomic_stmt)

    stmt         go to state 56
    if_clause    go to state 23
    atomic_stmt  go to state 24
    decl         go to state 25
    expr         go to state 26
    aexpr        go to state 27
    assignment   go to state 28
    vecexpr      go to state 29
    vect         go to state 30
    command      go to state 31


state 24

    5 stmt: atomic_stmt .

    $default  reduce using rule 5 (stmt)


state 25

   11 atomic_stmt: decl .

    $default  reduce using rule 11 (atomic_stmt)


state 26

    9 atomic_stmt: expr .

    $default  reduce using rule 9 (atomic_stmt)


state 27

   54 expr: aexpr .
   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 54 (expr)


state 28

   56 expr: assignment .

    $default  reduce using rule 56 (expr)


state 29

   55 expr: vecexpr .
   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 55 (expr)


state 30

   79 vecexpr: vect .

    $default  reduce using rule 79 (vecexpr)


state 31

   10 atomic_stmt: command .

    $default  reduce using rule 10 (atomic_stmt)


state 32

   58 aexpr: VARIABLE .
   74      | VARIABLE . '[' VARIABLE ']'

    '['  shift, and go to state 40

    $default  reduce using rule 58 (aexpr)


state 33

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   66      | '+' aexpr .
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    $default  reduce using rule 66 (aexpr)


state 34

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   65      | '-' aexpr .
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    $default  reduce using rule 65 (aexpr)


state 35

   78 vecexpr: VECVAR .

    $default  reduce using rule 78 (vecexpr)


state 36

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66


state 37

   68 aexpr: '<' vecexpr . ',' vecexpr '>'
   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    ','  shift, and go to state 74


state 38

   12 decl: VARIABLE ':' . marker
   13     | VARIABLE ':' . drift
   14     | VARIABLE ':' . sbend
   15     | VARIABLE ':' . quad
   16     | VARIABLE ':' . sextupole
   17     | VARIABLE ':' . octupole
   18     | VARIABLE ':' . rcol
   19     | VARIABLE ':' . ecol
   20     | VARIABLE ':' . multipole
   21     | VARIABLE ':' . element
   22     | VARIABLE ':' . laser
   23     | VARIABLE ':' . line
   24     | VARIABLE ':' . sequence
   25     | VARIABLE ':' . extension

    VARIABLE    shift, and go to state 75
    MARKER      shift, and go to state 76
    ELEMENT     shift, and go to state 77
    DRIFT       shift, and go to state 78
    SBEND       shift, and go to state 79
    QUADRUPOLE  shift, and go to state 80
    SEXTUPOLE   shift, and go to state 81
    OCTUPOLE    shift, and go to state 82
    MULTIPOLE   shift, and go to state 83
    RCOL        shift, and go to state 84
    ECOL        shift, and go to state 85
    LINE        shift, and go to state 86
    SEQUENCE    shift, and go to state 87
    LASER       shift, and go to state 88

    marker     go to state 89
    drift      go to state 90
    sbend      go to state 91
    quad       go to state 92
    sextupole  go to state 93
    octupole   go to state 94
    multipole  go to state 95
    ecol       go to state 96
    rcol       go to state 97
    laser      go to state 98
    element    go to state 99
    extension  go to state 100
    line       go to state 101
    sequence   go to state 102


state 39

   75 assignment: VARIABLE '=' . aexpr
   76           | VARIABLE '=' . vecexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 103
    vecexpr  go to state 104
    vect     go to state 30


state 40

   74 aexpr: VARIABLE '[' . VARIABLE ']'

    VARIABLE  shift, and go to state 105


state 41

   77 assignment: VECVAR '=' . vecexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 36
    vecexpr  go to state 106
    vect     go to state 30


state 42

   59 aexpr: FUNC '(' . aexpr ')'

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 107


state 43

   93 command: BEAM ',' . beam_parameters

    VARIABLE  shift, and go to state 108

    $default  reduce using rule 117 (beam_parameters)

    beam_parameters  go to state 109


state 44

  100 command: OPTION ',' . option_parameters

    VARIABLE  shift, and go to state 110

    $default  reduce using rule 114 (option_parameters)

    option_parameters  go to state 111


state 45

   95 command: PRINT ',' . LINE
   96        | PRINT ',' . OPTION
   97        | PRINT ',' . VARIABLE
   98        | PRINT ',' . VECVAR

    VARIABLE  shift, and go to state 112
    VECVAR    shift, and go to state 113
    LINE      shift, and go to state 114
    OPTION    shift, and go to state 115


state 46

   99 command: USE ',' . use_parameters

    PERIOD  shift, and go to state 116

    use_parameters  go to state 117


state 47

  101 command: ECHO STR .

    $default  reduce using rule 101 (command)


state 48

  102 command: SAMPLE ',' . sample_options

    RANGE  shift, and go to state 118

    sample_options  go to state 119


state 49

  103 command: CSAMPLE ',' . csample_options

    VARIABLE  shift, and go to state 120
    RANGE     shift, and go to state 118

    sample_options   go to state 121
    csample_options  go to state 122


state 50

    7 if_clause: IF '(' . aexpr ')'

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 123


state 51

    2 input: input . stmt ';'
    6 stmt: BEGN input . END

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    VECVAR    shift, and go to state 8
    FUNC      shift, and go to state 9
    BEAM      shift, and go to state 10
    OPTION    shift, and go to state 11
    PRINT     shift, and go to state 12
    STOP      shift, and go to state 13
    USE       shift, and go to state 14
    ECHO      shift, and go to state 15
    SAMPLE    shift, and go to state 16
    CSAMPLE   shift, and go to state 17
    IF        shift, and go to state 18
    BEGN      shift, and go to state 19
    END       shift, and go to state 124
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 8 (atomic_stmt)

    stmt         go to state 22
    if_clause    go to state 23
    atomic_stmt  go to state 24
    decl         go to state 25
    expr         go to state 26
    aexpr        go to state 27
    assignment   go to state 28
    vecexpr      go to state 29
    vect         go to state 30
    command      go to state 31


state 52

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   67      | '(' aexpr . ')'
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66
    ')'  shift, and go to state 125


state 53

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   91 numbers: aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 91 (numbers)


state 54

   88 vect: '{' numbers . '}'
   90 numbers: numbers . ',' aexpr

    ','  shift, and go to state 126
    '}'  shift, and go to state 127


state 55

    2 input: input stmt ';' .

    $default  reduce using rule 2 (input)


state 56

    3 stmt: if_clause stmt .
    4     | if_clause stmt . ELSE stmt

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 3 (stmt)]
    $default  reduce using rule 3 (stmt)


state 57

   60 aexpr: aexpr '+' . aexpr
   85 vecexpr: aexpr '+' . vecexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 129
    vecexpr  go to state 130
    vect     go to state 30


state 58

   61 aexpr: aexpr '-' . aexpr
   86 vecexpr: aexpr '-' . vecexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 131
    vecexpr  go to state 132
    vect     go to state 30


state 59

   62 aexpr: aexpr '*' . aexpr
   87 vecexpr: aexpr '*' . vecexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 133
    vecexpr  go to state 134
    vect     go to state 30


state 60

   63 aexpr: aexpr '/' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 135


state 61

   64 aexpr: aexpr '^' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 136


state 62

   69 aexpr: aexpr '<' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 137


state 63

   71 aexpr: aexpr '>' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 138


state 64

   72 aexpr: aexpr GE . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 139


state 65

   70 aexpr: aexpr LE . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 140


state 66

   73 aexpr: aexpr NE . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 141


state 67

   80 vecexpr: vecexpr '+' . vecexpr
   82        | vecexpr '+' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 142
    vecexpr  go to state 143
    vect     go to state 30


state 68

   81 vecexpr: vecexpr '-' . vecexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 36
    vecexpr  go to state 144
    vect     go to state 30


state 69

   83 vecexpr: vecexpr '*' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 145


state 70

   84 vecexpr: vecexpr '/' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 146


state 71

   60 aexpr: aexpr '+' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 147


state 72

   61 aexpr: aexpr '-' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 148


state 73

   62 aexpr: aexpr '*' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 149


state 74

   68 aexpr: '<' vecexpr ',' . vecexpr '>'

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 36
    vecexpr  go to state 150
    vect     go to state 30


state 75

   37 extension: VARIABLE . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 152


state 76

   26 marker: MARKER .

    $default  reduce using rule 26 (marker)


state 77

   36 element: ELEMENT . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 153


state 78

   27 drift: DRIFT . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 154


state 79

   28 sbend: SBEND . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 155


state 80

   29 quad: QUADRUPOLE . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 156


state 81

   30 sextupole: SEXTUPOLE . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 157


state 82

   31 octupole: OCTUPOLE . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 158


state 83

   32 multipole: MULTIPOLE . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 159


state 84

   34 rcol: RCOL . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 160


state 85

   33 ecol: ECOL . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 161


state 86

   45 line: LINE . '=' '(' element_seq ')'

    '='  shift, and go to state 162


state 87

   46 sequence: SEQUENCE .

    $default  reduce using rule 46 (sequence)


state 88

   35 laser: LASER . parameters

    VARIABLE  shift, and go to state 151

    $default  reduce using rule 38 (parameters)

    parameters  go to state 163


state 89

   12 decl: VARIABLE ':' marker .

    $default  reduce using rule 12 (decl)


state 90

   13 decl: VARIABLE ':' drift .

    $default  reduce using rule 13 (decl)


state 91

   14 decl: VARIABLE ':' sbend .

    $default  reduce using rule 14 (decl)


state 92

   15 decl: VARIABLE ':' quad .

    $default  reduce using rule 15 (decl)


state 93

   16 decl: VARIABLE ':' sextupole .

    $default  reduce using rule 16 (decl)


state 94

   17 decl: VARIABLE ':' octupole .

    $default  reduce using rule 17 (decl)


state 95

   20 decl: VARIABLE ':' multipole .

    $default  reduce using rule 20 (decl)


state 96

   19 decl: VARIABLE ':' ecol .

    $default  reduce using rule 19 (decl)


state 97

   18 decl: VARIABLE ':' rcol .

    $default  reduce using rule 18 (decl)


state 98

   22 decl: VARIABLE ':' laser .

    $default  reduce using rule 22 (decl)


state 99

   21 decl: VARIABLE ':' element .

    $default  reduce using rule 21 (decl)


state 100

   25 decl: VARIABLE ':' extension .

    $default  reduce using rule 25 (decl)


state 101

   23 decl: VARIABLE ':' line .

    $default  reduce using rule 23 (decl)


state 102

   24 decl: VARIABLE ':' sequence .

    $default  reduce using rule 24 (decl)


state 103

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   75 assignment: VARIABLE '=' aexpr .
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 75 (assignment)


state 104

   76 assignment: VARIABLE '=' vecexpr .
   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 76 (assignment)


state 105

   74 aexpr: VARIABLE '[' VARIABLE . ']'

    ']'  shift, and go to state 164


state 106

   77 assignment: VECVAR '=' vecexpr .
   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 77 (assignment)


state 107

   59 aexpr: FUNC '(' aexpr . ')'
   60      | aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66
    ')'  shift, and go to state 165


state 108

  119 beam_parameters: VARIABLE . '=' aexpr
  121                | VARIABLE . '=' STR

    '='  shift, and go to state 166


state 109

   93 command: BEAM ',' beam_parameters .
  118 beam_parameters: beam_parameters . ',' VARIABLE '=' aexpr
  120                | beam_parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 167

    $default  reduce using rule 93 (command)


state 110

  116 option_parameters: VARIABLE . '=' aexpr

    '='  shift, and go to state 168


state 111

  100 command: OPTION ',' option_parameters .
  115 option_parameters: option_parameters . ',' VARIABLE '=' aexpr

    ','  shift, and go to state 169

    $default  reduce using rule 100 (command)


state 112

   97 command: PRINT ',' VARIABLE .

    $default  reduce using rule 97 (command)


state 113

   98 command: PRINT ',' VECVAR .

    $default  reduce using rule 98 (command)


state 114

   95 command: PRINT ',' LINE .

    $default  reduce using rule 95 (command)


state 115

   96 command: PRINT ',' OPTION .

    $default  reduce using rule 96 (command)


state 116

  104 use_parameters: PERIOD . '=' VARIABLE
  105               | PERIOD . '=' VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE

    '='  shift, and go to state 170


state 117

   99 command: USE ',' use_parameters .

    $default  reduce using rule 99 (command)


state 118

  106 sample_options: RANGE . '=' VARIABLE
  107               | RANGE . '=' VARIABLE '[' NUMBER ']'

    '='  shift, and go to state 171


state 119

  102 command: SAMPLE ',' sample_options .

    $default  reduce using rule 102 (command)


state 120

  108 csample_options: VARIABLE . '=' aexpr
  109                | VARIABLE . '=' STR

    '='  shift, and go to state 172


state 121

  112 csample_options: sample_options . ',' csample_options
  113                | sample_options .

    ','  shift, and go to state 173

    ','       [reduce using rule 113 (csample_options)]
    $default  reduce using rule 113 (csample_options)


state 122

  103 command: CSAMPLE ',' csample_options .
  110 csample_options: csample_options . ',' VARIABLE '=' aexpr
  111                | csample_options . ',' VARIABLE '=' STR

    ','  shift, and go to state 174

    $default  reduce using rule 103 (command)


state 123

    7 if_clause: IF '(' aexpr . ')'
   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66
    ')'  shift, and go to state 175


state 124

    6 stmt: BEGN input END .

    $default  reduce using rule 6 (stmt)


state 125

   67 aexpr: '(' aexpr ')' .

    $default  reduce using rule 67 (aexpr)


state 126

   90 numbers: numbers ',' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 176


state 127

   88 vect: '{' numbers '}' .

    $default  reduce using rule 88 (vect)


state 128

    4 stmt: if_clause stmt ELSE . stmt

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    VECVAR    shift, and go to state 8
    FUNC      shift, and go to state 9
    BEAM      shift, and go to state 10
    OPTION    shift, and go to state 11
    PRINT     shift, and go to state 12
    STOP      shift, and go to state 13
    USE       shift, and go to state 14
    ECHO      shift, and go to state 15
    SAMPLE    shift, and go to state 16
    CSAMPLE   shift, and go to state 17
    IF        shift, and go to state 18
    BEGN      shift, and go to state 19
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 8 (atomic_stmt)

    stmt         go to state 177
    if_clause    go to state 23
    atomic_stmt  go to state 24
    decl         go to state 25
    expr         go to state 26
    aexpr        go to state 27
    assignment   go to state 28
    vecexpr      go to state 29
    vect         go to state 30
    command      go to state 31


state 129

   60 aexpr: aexpr . '+' aexpr
   60      | aexpr '+' aexpr .
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 60 (aexpr)


state 130

   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr
   85        | aexpr '+' vecexpr .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 85 (vecexpr)


state 131

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   61      | aexpr '-' aexpr .
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 61 (aexpr)


state 132

   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr
   86        | aexpr '-' vecexpr .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 86 (vecexpr)


state 133

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   62      | aexpr '*' aexpr .
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 62 (aexpr)


state 134

   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr
   87        | aexpr '*' vecexpr .

    $default  reduce using rule 87 (vecexpr)


state 135

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   63      | aexpr '/' aexpr .
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 63 (aexpr)


state 136

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   64      | aexpr '^' aexpr .
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    $default  reduce using rule 64 (aexpr)


state 137

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   69      | aexpr '<' aexpr .
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    $default  reduce using rule 69 (aexpr)


state 138

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   71      | aexpr '>' aexpr .
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    $default  reduce using rule 71 (aexpr)


state 139

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   72      | aexpr GE aexpr .
   73      | aexpr . NE aexpr

    $default  reduce using rule 72 (aexpr)


state 140

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   70      | aexpr LE aexpr .
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    $default  reduce using rule 70 (aexpr)


state 141

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   73      | aexpr NE aexpr .

    $default  reduce using rule 73 (aexpr)


state 142

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   82 vecexpr: vecexpr '+' aexpr .
   85        | aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 82 (vecexpr)


state 143

   80 vecexpr: vecexpr . '+' vecexpr
   80        | vecexpr '+' vecexpr .
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 80 (vecexpr)


state 144

   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   81        | vecexpr '-' vecexpr .
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 81 (vecexpr)


state 145

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   83 vecexpr: vecexpr '*' aexpr .

    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 83 (vecexpr)


state 146

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   84 vecexpr: vecexpr '/' aexpr .

    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 84 (vecexpr)


state 147

   60 aexpr: aexpr . '+' aexpr
   60      | aexpr '+' aexpr .
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 60 (aexpr)


state 148

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   61      | aexpr '-' aexpr .
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 61 (aexpr)


state 149

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   62      | aexpr '*' aexpr .
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr

    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 62 (aexpr)


state 150

   68 aexpr: '<' vecexpr ',' vecexpr . '>'
   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '>'  shift, and go to state 178


state 151

   41 parameters: VARIABLE . '=' vecexpr
   42           | VARIABLE . '=' aexpr
   44           | VARIABLE . '=' STR

    '='  shift, and go to state 179


state 152

   37 extension: VARIABLE parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 37 (extension)


state 153

   36 element: ELEMENT parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 36 (element)


state 154

   27 drift: DRIFT parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 27 (drift)


state 155

   28 sbend: SBEND parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 28 (sbend)


state 156

   29 quad: QUADRUPOLE parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 29 (quad)


state 157

   30 sextupole: SEXTUPOLE parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 30 (sextupole)


state 158

   31 octupole: OCTUPOLE parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 31 (octupole)


state 159

   32 multipole: MULTIPOLE parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 32 (multipole)


state 160

   34 rcol: RCOL parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 34 (rcol)


state 161

   33 ecol: ECOL parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 33 (ecol)


state 162

   45 line: LINE '=' . '(' element_seq ')'

    '('  shift, and go to state 181


state 163

   35 laser: LASER parameters .
   39 parameters: parameters . ',' VARIABLE '=' aexpr
   40           | parameters . ',' VARIABLE '=' vecexpr
   43           | parameters . ',' VARIABLE '=' STR

    ','  shift, and go to state 180

    $default  reduce using rule 35 (laser)


state 164

   74 aexpr: VARIABLE '[' VARIABLE ']' .

    $default  reduce using rule 74 (aexpr)


state 165

   59 aexpr: FUNC '(' aexpr ')' .

    $default  reduce using rule 59 (aexpr)


state 166

  119 beam_parameters: VARIABLE '=' . aexpr
  121                | VARIABLE '=' . STR

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    STR       shift, and go to state 182
    '('       shift, and go to state 20

    aexpr  go to state 183


state 167

  118 beam_parameters: beam_parameters ',' . VARIABLE '=' aexpr
  120                | beam_parameters ',' . VARIABLE '=' STR

    VARIABLE  shift, and go to state 184


state 168

  116 option_parameters: VARIABLE '=' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 185


state 169

  115 option_parameters: option_parameters ',' . VARIABLE '=' aexpr

    VARIABLE  shift, and go to state 186


state 170

  104 use_parameters: PERIOD '=' . VARIABLE
  105               | PERIOD '=' . VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE

    VARIABLE  shift, and go to state 187


state 171

  106 sample_options: RANGE '=' . VARIABLE
  107               | RANGE '=' . VARIABLE '[' NUMBER ']'

    VARIABLE  shift, and go to state 188


state 172

  108 csample_options: VARIABLE '=' . aexpr
  109                | VARIABLE '=' . STR

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    STR       shift, and go to state 189
    '('       shift, and go to state 20

    aexpr  go to state 190


state 173

  112 csample_options: sample_options ',' . csample_options

    VARIABLE  shift, and go to state 120
    RANGE     shift, and go to state 118

    sample_options   go to state 121
    csample_options  go to state 191


state 174

  110 csample_options: csample_options ',' . VARIABLE '=' aexpr
  111                | csample_options ',' . VARIABLE '=' STR

    VARIABLE  shift, and go to state 192


state 175

    7 if_clause: IF '(' aexpr ')' .

    $default  reduce using rule 7 (if_clause)


state 176

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   90 numbers: numbers ',' aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 90 (numbers)


state 177

    4 stmt: if_clause stmt ELSE stmt .

    $default  reduce using rule 4 (stmt)


state 178

   68 aexpr: '<' vecexpr ',' vecexpr '>' .

    $default  reduce using rule 68 (aexpr)


state 179

   41 parameters: VARIABLE '=' . vecexpr
   42           | VARIABLE '=' . aexpr
   44           | VARIABLE '=' . STR

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    STR       shift, and go to state 193
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 194
    vecexpr  go to state 195
    vect     go to state 30


state 180

   39 parameters: parameters ',' . VARIABLE '=' aexpr
   40           | parameters ',' . VARIABLE '=' vecexpr
   43           | parameters ',' . VARIABLE '=' STR

    VARIABLE  shift, and go to state 196


state 181

   45 line: LINE '=' '(' . element_seq ')'

    NUMBER    shift, and go to state 197
    VARIABLE  shift, and go to state 198

    $default  reduce using rule 47 (element_seq)

    element_seq  go to state 199


state 182

  121 beam_parameters: VARIABLE '=' STR .

    $default  reduce using rule 121 (beam_parameters)


state 183

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
  119 beam_parameters: VARIABLE '=' aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 119 (beam_parameters)


state 184

  118 beam_parameters: beam_parameters ',' VARIABLE . '=' aexpr
  120                | beam_parameters ',' VARIABLE . '=' STR

    '='  shift, and go to state 200


state 185

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
  116 option_parameters: VARIABLE '=' aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 116 (option_parameters)


state 186

  115 option_parameters: option_parameters ',' VARIABLE . '=' aexpr

    '='  shift, and go to state 201


state 187

  104 use_parameters: PERIOD '=' VARIABLE .
  105               | PERIOD '=' VARIABLE . ',' RANGE '=' VARIABLE '/' VARIABLE

    ','  shift, and go to state 202

    $default  reduce using rule 104 (use_parameters)


state 188

  106 sample_options: RANGE '=' VARIABLE .
  107               | RANGE '=' VARIABLE . '[' NUMBER ']'

    '['  shift, and go to state 203

    $default  reduce using rule 106 (sample_options)


state 189

  109 csample_options: VARIABLE '=' STR .

    $default  reduce using rule 109 (csample_options)


state 190

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
  108 csample_options: VARIABLE '=' aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 108 (csample_options)


state 191

  110 csample_options: csample_options . ',' VARIABLE '=' aexpr
  111                | csample_options . ',' VARIABLE '=' STR
  112                | sample_options ',' csample_options .

    ','  shift, and go to state 174

    ','       [reduce using rule 112 (csample_options)]
    $default  reduce using rule 112 (csample_options)


state 192

  110 csample_options: csample_options ',' VARIABLE . '=' aexpr
  111                | csample_options ',' VARIABLE . '=' STR

    '='  shift, and go to state 204


state 193

   44 parameters: VARIABLE '=' STR .

    $default  reduce using rule 44 (parameters)


state 194

   42 parameters: VARIABLE '=' aexpr .
   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 42 (parameters)


state 195

   41 parameters: VARIABLE '=' vecexpr .
   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 41 (parameters)


state 196

   39 parameters: parameters ',' VARIABLE . '=' aexpr
   40           | parameters ',' VARIABLE . '=' vecexpr
   43           | parameters ',' VARIABLE . '=' STR

    '='  shift, and go to state 205


state 197

   53 element_seq: NUMBER . '*' VARIABLE

    '*'  shift, and go to state 206


state 198

   51 element_seq: VARIABLE .
   52            | VARIABLE . '*' NUMBER

    '*'  shift, and go to state 207

    $default  reduce using rule 51 (element_seq)


state 199

   45 line: LINE '=' '(' element_seq . ')'
   48 element_seq: element_seq . ',' VARIABLE
   49            | element_seq . ',' VARIABLE '*' NUMBER
   50            | element_seq . ',' NUMBER '*' VARIABLE

    ')'  shift, and go to state 208
    ','  shift, and go to state 209


state 200

  118 beam_parameters: beam_parameters ',' VARIABLE '=' . aexpr
  120                | beam_parameters ',' VARIABLE '=' . STR

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    STR       shift, and go to state 210
    '('       shift, and go to state 20

    aexpr  go to state 211


state 201

  115 option_parameters: option_parameters ',' VARIABLE '=' . aexpr

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    '('       shift, and go to state 20

    aexpr  go to state 212


state 202

  105 use_parameters: PERIOD '=' VARIABLE ',' . RANGE '=' VARIABLE '/' VARIABLE

    RANGE  shift, and go to state 213


state 203

  107 sample_options: RANGE '=' VARIABLE '[' . NUMBER ']'

    NUMBER  shift, and go to state 214


state 204

  110 csample_options: csample_options ',' VARIABLE '=' . aexpr
  111                | csample_options ',' VARIABLE '=' . STR

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    FUNC      shift, and go to state 9
    STR       shift, and go to state 215
    '('       shift, and go to state 20

    aexpr  go to state 216


state 205

   39 parameters: parameters ',' VARIABLE '=' . aexpr
   40           | parameters ',' VARIABLE '=' . vecexpr
   43           | parameters ',' VARIABLE '=' . STR

    '+'       shift, and go to state 3
    '-'       shift, and go to state 4
    '<'       shift, and go to state 5
    NUMBER    shift, and go to state 6
    VARIABLE  shift, and go to state 32
    VECVAR    shift, and go to state 35
    FUNC      shift, and go to state 9
    STR       shift, and go to state 217
    '('       shift, and go to state 20
    '{'       shift, and go to state 21

    aexpr    go to state 218
    vecexpr  go to state 219
    vect     go to state 30


state 206

   53 element_seq: NUMBER '*' . VARIABLE

    VARIABLE  shift, and go to state 220


state 207

   52 element_seq: VARIABLE '*' . NUMBER

    NUMBER  shift, and go to state 221


state 208

   45 line: LINE '=' '(' element_seq ')' .

    $default  reduce using rule 45 (line)


state 209

   48 element_seq: element_seq ',' . VARIABLE
   49            | element_seq ',' . VARIABLE '*' NUMBER
   50            | element_seq ',' . NUMBER '*' VARIABLE

    NUMBER    shift, and go to state 222
    VARIABLE  shift, and go to state 223


state 210

  120 beam_parameters: beam_parameters ',' VARIABLE '=' STR .

    $default  reduce using rule 120 (beam_parameters)


state 211

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
  118 beam_parameters: beam_parameters ',' VARIABLE '=' aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 118 (beam_parameters)


state 212

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
  115 option_parameters: option_parameters ',' VARIABLE '=' aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 115 (option_parameters)


state 213

  105 use_parameters: PERIOD '=' VARIABLE ',' RANGE . '=' VARIABLE '/' VARIABLE

    '='  shift, and go to state 224


state 214

  107 sample_options: RANGE '=' VARIABLE '[' NUMBER . ']'

    ']'  shift, and go to state 225


state 215

  111 csample_options: csample_options ',' VARIABLE '=' STR .

    $default  reduce using rule 111 (csample_options)


state 216

   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
  110 csample_options: csample_options ',' VARIABLE '=' aexpr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 110 (csample_options)


state 217

   43 parameters: parameters ',' VARIABLE '=' STR .

    $default  reduce using rule 43 (parameters)


state 218

   39 parameters: parameters ',' VARIABLE '=' aexpr .
   60 aexpr: aexpr . '+' aexpr
   61      | aexpr . '-' aexpr
   62      | aexpr . '*' aexpr
   63      | aexpr . '/' aexpr
   64      | aexpr . '^' aexpr
   69      | aexpr . '<' aexpr
   70      | aexpr . LE aexpr
   71      | aexpr . '>' aexpr
   72      | aexpr . GE aexpr
   73      | aexpr . NE aexpr
   85 vecexpr: aexpr . '+' vecexpr
   86        | aexpr . '-' vecexpr
   87        | aexpr . '*' vecexpr

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 39 (parameters)


state 219

   40 parameters: parameters ',' VARIABLE '=' vecexpr .
   80 vecexpr: vecexpr . '+' vecexpr
   81        | vecexpr . '-' vecexpr
   82        | vecexpr . '+' aexpr
   83        | vecexpr . '*' aexpr
   84        | vecexpr . '/' aexpr

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 40 (parameters)


state 220

   53 element_seq: NUMBER '*' VARIABLE .

    $default  reduce using rule 53 (element_seq)


state 221

   52 element_seq: VARIABLE '*' NUMBER .

    $default  reduce using rule 52 (element_seq)


state 222

   50 element_seq: element_seq ',' NUMBER . '*' VARIABLE

    '*'  shift, and go to state 226


state 223

   48 element_seq: element_seq ',' VARIABLE .
   49            | element_seq ',' VARIABLE . '*' NUMBER

    '*'  shift, and go to state 227

    $default  reduce using rule 48 (element_seq)


state 224

  105 use_parameters: PERIOD '=' VARIABLE ',' RANGE '=' . VARIABLE '/' VARIABLE

    VARIABLE  shift, and go to state 228


state 225

  107 sample_options: RANGE '=' VARIABLE '[' NUMBER ']' .

    $default  reduce using rule 107 (sample_options)


state 226

   50 element_seq: element_seq ',' NUMBER '*' . VARIABLE

    VARIABLE  shift, and go to state 229


state 227

   49 element_seq: element_seq ',' VARIABLE '*' . NUMBER

    NUMBER  shift, and go to state 230


state 228

  105 use_parameters: PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE . '/' VARIABLE

    '/'  shift, and go to state 231


state 229

   50 element_seq: element_seq ',' NUMBER '*' VARIABLE .

    $default  reduce using rule 50 (element_seq)


state 230

   49 element_seq: element_seq ',' VARIABLE '*' NUMBER .

    $default  reduce using rule 49 (element_seq)


state 231

  105 use_parameters: PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE '/' . VARIABLE

    VARIABLE  shift, and go to state 232


state 232

  105 use_parameters: PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE .

    $default  reduce using rule 105 (use_parameters)
