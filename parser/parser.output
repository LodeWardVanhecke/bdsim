

Terminals which are not used:

   DIPOLE
   SOLENOID
   COLLIMATOR
   SPOILER
   ABSORBER
   APERTURE
   FILENAME
   GAS
   PIPE
   VALUE
   PRINTF
   FOR


Conflict in state 32 between rule 66 and token '+' resolved as reduce.
Conflict in state 32 between rule 66 and token '-' resolved as reduce.
Conflict in state 32 between rule 66 and token '*' resolved as reduce.
Conflict in state 32 between rule 66 and token '/' resolved as reduce.
Conflict in state 32 between rule 66 and token '^' resolved as reduce.
Conflict in state 32 between rule 66 and token '<' resolved as reduce.
Conflict in state 32 between rule 66 and token '>' resolved as reduce.
Conflict in state 32 between rule 66 and token NE resolved as reduce.
Conflict in state 32 between rule 66 and token LE resolved as reduce.
Conflict in state 32 between rule 66 and token GE resolved as reduce.
Conflict in state 33 between rule 65 and token '+' resolved as reduce.
Conflict in state 33 between rule 65 and token '-' resolved as reduce.
Conflict in state 33 between rule 65 and token '*' resolved as reduce.
Conflict in state 33 between rule 65 and token '/' resolved as reduce.
Conflict in state 33 between rule 65 and token '^' resolved as reduce.
Conflict in state 33 between rule 65 and token '<' resolved as reduce.
Conflict in state 33 between rule 65 and token '>' resolved as reduce.
Conflict in state 33 between rule 65 and token NE resolved as reduce.
Conflict in state 33 between rule 65 and token LE resolved as reduce.
Conflict in state 33 between rule 65 and token GE resolved as reduce.
Conflict in state 128 between rule 60 and token '+' resolved as reduce.
Conflict in state 128 between rule 60 and token '-' resolved as reduce.
Conflict in state 128 between rule 60 and token '*' resolved as shift.
Conflict in state 128 between rule 60 and token '/' resolved as shift.
Conflict in state 128 between rule 60 and token '^' resolved as shift.
Conflict in state 128 between rule 60 and token '<' resolved as shift.
Conflict in state 128 between rule 60 and token '>' resolved as shift.
Conflict in state 128 between rule 60 and token NE resolved as shift.
Conflict in state 128 between rule 60 and token LE resolved as shift.
Conflict in state 128 between rule 60 and token GE resolved as shift.
Conflict in state 129 between rule 85 and token '+' resolved as reduce.
Conflict in state 129 between rule 85 and token '-' resolved as reduce.
Conflict in state 129 between rule 85 and token '*' resolved as shift.
Conflict in state 129 between rule 85 and token '/' resolved as shift.
Conflict in state 130 between rule 61 and token '+' resolved as reduce.
Conflict in state 130 between rule 61 and token '-' resolved as reduce.
Conflict in state 130 between rule 61 and token '*' resolved as shift.
Conflict in state 130 between rule 61 and token '/' resolved as shift.
Conflict in state 130 between rule 61 and token '^' resolved as shift.
Conflict in state 130 between rule 61 and token '<' resolved as shift.
Conflict in state 130 between rule 61 and token '>' resolved as shift.
Conflict in state 130 between rule 61 and token NE resolved as shift.
Conflict in state 130 between rule 61 and token LE resolved as shift.
Conflict in state 130 between rule 61 and token GE resolved as shift.
Conflict in state 131 between rule 86 and token '+' resolved as reduce.
Conflict in state 131 between rule 86 and token '-' resolved as reduce.
Conflict in state 131 between rule 86 and token '*' resolved as shift.
Conflict in state 131 between rule 86 and token '/' resolved as shift.
Conflict in state 132 between rule 62 and token '+' resolved as reduce.
Conflict in state 132 between rule 62 and token '-' resolved as reduce.
Conflict in state 132 between rule 62 and token '*' resolved as reduce.
Conflict in state 132 between rule 62 and token '/' resolved as reduce.
Conflict in state 132 between rule 62 and token '^' resolved as shift.
Conflict in state 132 between rule 62 and token '<' resolved as shift.
Conflict in state 132 between rule 62 and token '>' resolved as shift.
Conflict in state 132 between rule 62 and token NE resolved as shift.
Conflict in state 132 between rule 62 and token LE resolved as shift.
Conflict in state 132 between rule 62 and token GE resolved as shift.
Conflict in state 133 between rule 87 and token '+' resolved as reduce.
Conflict in state 133 between rule 87 and token '-' resolved as reduce.
Conflict in state 133 between rule 87 and token '*' resolved as reduce.
Conflict in state 133 between rule 87 and token '/' resolved as reduce.
Conflict in state 134 between rule 63 and token '+' resolved as reduce.
Conflict in state 134 between rule 63 and token '-' resolved as reduce.
Conflict in state 134 between rule 63 and token '*' resolved as reduce.
Conflict in state 134 between rule 63 and token '/' resolved as reduce.
Conflict in state 134 between rule 63 and token '^' resolved as shift.
Conflict in state 134 between rule 63 and token '<' resolved as shift.
Conflict in state 134 between rule 63 and token '>' resolved as shift.
Conflict in state 134 between rule 63 and token NE resolved as shift.
Conflict in state 134 between rule 63 and token LE resolved as shift.
Conflict in state 134 between rule 63 and token GE resolved as shift.
Conflict in state 135 between rule 64 and token '+' resolved as reduce.
Conflict in state 135 between rule 64 and token '-' resolved as reduce.
Conflict in state 135 between rule 64 and token '*' resolved as reduce.
Conflict in state 135 between rule 64 and token '/' resolved as reduce.
Conflict in state 135 between rule 64 and token '^' resolved as reduce.
Conflict in state 135 between rule 64 and token '<' resolved as reduce.
Conflict in state 135 between rule 64 and token '>' resolved as reduce.
Conflict in state 135 between rule 64 and token NE resolved as reduce.
Conflict in state 135 between rule 64 and token LE resolved as reduce.
Conflict in state 135 between rule 64 and token GE resolved as reduce.
Conflict in state 136 between rule 69 and token '+' resolved as reduce.
Conflict in state 136 between rule 69 and token '-' resolved as reduce.
Conflict in state 136 between rule 69 and token '*' resolved as reduce.
Conflict in state 136 between rule 69 and token '/' resolved as reduce.
Conflict in state 136 between rule 69 and token '^' resolved as reduce.
Conflict in state 136 between rule 69 and token '<' resolved as reduce.
Conflict in state 136 between rule 69 and token '>' resolved as reduce.
Conflict in state 136 between rule 69 and token NE resolved as reduce.
Conflict in state 136 between rule 69 and token LE resolved as reduce.
Conflict in state 136 between rule 69 and token GE resolved as reduce.
Conflict in state 137 between rule 71 and token '+' resolved as reduce.
Conflict in state 137 between rule 71 and token '-' resolved as reduce.
Conflict in state 137 between rule 71 and token '*' resolved as reduce.
Conflict in state 137 between rule 71 and token '/' resolved as reduce.
Conflict in state 137 between rule 71 and token '^' resolved as reduce.
Conflict in state 137 between rule 71 and token '<' resolved as reduce.
Conflict in state 137 between rule 71 and token '>' resolved as reduce.
Conflict in state 137 between rule 71 and token NE resolved as reduce.
Conflict in state 137 between rule 71 and token LE resolved as reduce.
Conflict in state 137 between rule 71 and token GE resolved as reduce.
Conflict in state 138 between rule 73 and token '+' resolved as reduce.
Conflict in state 138 between rule 73 and token '-' resolved as reduce.
Conflict in state 138 between rule 73 and token '*' resolved as reduce.
Conflict in state 138 between rule 73 and token '/' resolved as reduce.
Conflict in state 138 between rule 73 and token '^' resolved as reduce.
Conflict in state 138 between rule 73 and token '<' resolved as reduce.
Conflict in state 138 between rule 73 and token '>' resolved as reduce.
Conflict in state 138 between rule 73 and token NE resolved as reduce.
Conflict in state 138 between rule 73 and token LE resolved as reduce.
Conflict in state 138 between rule 73 and token GE resolved as reduce.
Conflict in state 139 between rule 70 and token '+' resolved as reduce.
Conflict in state 139 between rule 70 and token '-' resolved as reduce.
Conflict in state 139 between rule 70 and token '*' resolved as reduce.
Conflict in state 139 between rule 70 and token '/' resolved as reduce.
Conflict in state 139 between rule 70 and token '^' resolved as reduce.
Conflict in state 139 between rule 70 and token '<' resolved as reduce.
Conflict in state 139 between rule 70 and token '>' resolved as reduce.
Conflict in state 139 between rule 70 and token NE resolved as reduce.
Conflict in state 139 between rule 70 and token LE resolved as reduce.
Conflict in state 139 between rule 70 and token GE resolved as reduce.
Conflict in state 140 between rule 72 and token '+' resolved as reduce.
Conflict in state 140 between rule 72 and token '-' resolved as reduce.
Conflict in state 140 between rule 72 and token '*' resolved as reduce.
Conflict in state 140 between rule 72 and token '/' resolved as reduce.
Conflict in state 140 between rule 72 and token '^' resolved as reduce.
Conflict in state 140 between rule 72 and token '<' resolved as reduce.
Conflict in state 140 between rule 72 and token '>' resolved as reduce.
Conflict in state 140 between rule 72 and token NE resolved as reduce.
Conflict in state 140 between rule 72 and token LE resolved as reduce.
Conflict in state 140 between rule 72 and token GE resolved as reduce.
Conflict in state 141 between rule 82 and token '+' resolved as reduce.
Conflict in state 141 between rule 82 and token '-' resolved as reduce.
Conflict in state 141 between rule 82 and token '*' resolved as shift.
Conflict in state 141 between rule 82 and token '/' resolved as shift.
Conflict in state 141 between rule 82 and token '>' resolved as shift.
Conflict in state 142 between rule 80 and token '+' resolved as reduce.
Conflict in state 142 between rule 80 and token '-' resolved as reduce.
Conflict in state 142 between rule 80 and token '*' resolved as shift.
Conflict in state 142 between rule 80 and token '/' resolved as shift.
Conflict in state 143 between rule 81 and token '+' resolved as reduce.
Conflict in state 143 between rule 81 and token '-' resolved as reduce.
Conflict in state 143 between rule 81 and token '*' resolved as shift.
Conflict in state 143 between rule 81 and token '/' resolved as shift.
Conflict in state 144 between rule 83 and token '+' resolved as reduce.
Conflict in state 144 between rule 83 and token '-' resolved as reduce.
Conflict in state 144 between rule 83 and token '*' resolved as reduce.
Conflict in state 144 between rule 83 and token '/' resolved as reduce.
Conflict in state 144 between rule 83 and token '>' resolved as shift.
Conflict in state 145 between rule 84 and token '+' resolved as reduce.
Conflict in state 145 between rule 84 and token '-' resolved as reduce.
Conflict in state 145 between rule 84 and token '*' resolved as reduce.
Conflict in state 145 between rule 84 and token '/' resolved as reduce.
Conflict in state 145 between rule 84 and token '>' resolved as shift.
Conflict in state 146 between rule 60 and token '+' resolved as reduce.
Conflict in state 146 between rule 60 and token '-' resolved as reduce.
Conflict in state 146 between rule 60 and token '*' resolved as shift.
Conflict in state 146 between rule 60 and token '/' resolved as shift.
Conflict in state 146 between rule 60 and token '^' resolved as shift.
Conflict in state 146 between rule 60 and token '<' resolved as shift.
Conflict in state 146 between rule 60 and token '>' resolved as shift.
Conflict in state 146 between rule 60 and token NE resolved as shift.
Conflict in state 146 between rule 60 and token LE resolved as shift.
Conflict in state 146 between rule 60 and token GE resolved as shift.
Conflict in state 147 between rule 61 and token '+' resolved as reduce.
Conflict in state 147 between rule 61 and token '-' resolved as reduce.
Conflict in state 147 between rule 61 and token '*' resolved as shift.
Conflict in state 147 between rule 61 and token '/' resolved as shift.
Conflict in state 147 between rule 61 and token '^' resolved as shift.
Conflict in state 147 between rule 61 and token '<' resolved as shift.
Conflict in state 147 between rule 61 and token '>' resolved as shift.
Conflict in state 147 between rule 61 and token NE resolved as shift.
Conflict in state 147 between rule 61 and token LE resolved as shift.
Conflict in state 147 between rule 61 and token GE resolved as shift.
Conflict in state 148 between rule 62 and token '+' resolved as reduce.
Conflict in state 148 between rule 62 and token '-' resolved as reduce.
Conflict in state 148 between rule 62 and token '*' resolved as reduce.
Conflict in state 148 between rule 62 and token '/' resolved as reduce.
Conflict in state 148 between rule 62 and token '^' resolved as shift.
Conflict in state 148 between rule 62 and token '<' resolved as shift.
Conflict in state 148 between rule 62 and token '>' resolved as shift.
Conflict in state 148 between rule 62 and token NE resolved as shift.
Conflict in state 148 between rule 62 and token LE resolved as shift.
Conflict in state 148 between rule 62 and token GE resolved as shift.
State 55 contains 1 shift/reduce conflict.
State 120 contains 1 shift/reduce conflict.
State 190 contains 1 shift/reduce conflict.

Grammar
rule 1    input ->		/* empty */
rule 2    input -> input stmt ';'
rule 3    stmt -> if_clause stmt
rule 4    stmt -> if_clause stmt ELSE stmt
rule 5    stmt -> atomic_stmt
rule 6    stmt -> BEGN input END
rule 7    if_clause -> IF '(' aexpr ')'
rule 8    atomic_stmt ->		/* empty */
rule 9    atomic_stmt -> expr
rule 10   atomic_stmt -> command
rule 11   atomic_stmt -> decl
rule 12   decl -> VARIABLE ':' marker
rule 13   decl -> VARIABLE ':' drift
rule 14   decl -> VARIABLE ':' sbend
rule 15   decl -> VARIABLE ':' quad
rule 16   decl -> VARIABLE ':' sextupole
rule 17   decl -> VARIABLE ':' octupole
rule 18   decl -> VARIABLE ':' rcol
rule 19   decl -> VARIABLE ':' ecol
rule 20   decl -> VARIABLE ':' multipole
rule 21   decl -> VARIABLE ':' element
rule 22   decl -> VARIABLE ':' laser
rule 23   decl -> VARIABLE ':' line
rule 24   decl -> VARIABLE ':' sequence
rule 25   decl -> VARIABLE ':' extension
rule 26   marker -> MARKER
rule 27   drift -> DRIFT parameters
rule 28   sbend -> SBEND parameters
rule 29   quad -> QUADRUPOLE parameters
rule 30   sextupole -> SEXTUPOLE parameters
rule 31   octupole -> OCTUPOLE parameters
rule 32   multipole -> MULTIPOLE parameters
rule 33   ecol -> ECOL parameters
rule 34   rcol -> RCOL parameters
rule 35   laser -> LASER parameters
rule 36   element -> ELEMENT parameters
rule 37   extension -> VARIABLE parameters
rule 38   parameters ->		/* empty */
rule 39   parameters -> parameters ',' VARIABLE '=' aexpr
rule 40   parameters -> parameters ',' VARIABLE '=' vecexpr
rule 41   parameters -> VARIABLE '=' vecexpr
rule 42   parameters -> VARIABLE '=' aexpr
rule 43   parameters -> parameters ',' VARIABLE '=' STR
rule 44   parameters -> VARIABLE '=' STR
rule 45   line -> LINE '=' '(' element_seq ')'
rule 46   sequence -> SEQUENCE
rule 47   element_seq ->		/* empty */
rule 48   element_seq -> element_seq ',' VARIABLE
rule 49   element_seq -> element_seq ',' VARIABLE '*' NUMBER
rule 50   element_seq -> element_seq ',' NUMBER '*' VARIABLE
rule 51   element_seq -> VARIABLE
rule 52   element_seq -> VARIABLE '*' NUMBER
rule 53   element_seq -> NUMBER '*' VARIABLE
rule 54   expr -> aexpr
rule 55   expr -> vecexpr
rule 56   expr -> assignment
rule 57   aexpr -> NUMBER
rule 58   aexpr -> VARIABLE
rule 59   aexpr -> FUNC '(' aexpr ')'
rule 60   aexpr -> aexpr '+' aexpr
rule 61   aexpr -> aexpr '-' aexpr
rule 62   aexpr -> aexpr '*' aexpr
rule 63   aexpr -> aexpr '/' aexpr
rule 64   aexpr -> aexpr '^' aexpr
rule 65   aexpr -> '-' aexpr
rule 66   aexpr -> '+' aexpr
rule 67   aexpr -> '(' aexpr ')'
rule 68   aexpr -> '<' vecexpr ',' vecexpr '>'
rule 69   aexpr -> aexpr '<' aexpr
rule 70   aexpr -> aexpr LE aexpr
rule 71   aexpr -> aexpr '>' aexpr
rule 72   aexpr -> aexpr GE aexpr
rule 73   aexpr -> aexpr NE aexpr
rule 74   aexpr -> VARIABLE '[' VARIABLE ']'
rule 75   assignment -> VARIABLE '=' aexpr
rule 76   assignment -> VARIABLE '=' vecexpr
rule 77   assignment -> VECVAR '=' vecexpr
rule 78   vecexpr -> VECVAR
rule 79   vecexpr -> vect
rule 80   vecexpr -> vecexpr '+' vecexpr
rule 81   vecexpr -> vecexpr '-' vecexpr
rule 82   vecexpr -> vecexpr '+' aexpr
rule 83   vecexpr -> vecexpr '*' aexpr
rule 84   vecexpr -> vecexpr '/' aexpr
rule 85   vecexpr -> aexpr '+' vecexpr
rule 86   vecexpr -> aexpr '-' vecexpr
rule 87   vecexpr -> aexpr '*' vecexpr
rule 88   vect -> '{' numbers '}'
rule 89   numbers ->		/* empty */
rule 90   numbers -> numbers ',' aexpr
rule 91   numbers -> aexpr
rule 92   command -> STOP
rule 93   command -> BEAM ',' beam_parameters
rule 94   command -> PRINT
rule 95   command -> PRINT ',' LINE
rule 96   command -> PRINT ',' OPTION
rule 97   command -> PRINT ',' VARIABLE
rule 98   command -> PRINT ',' VECVAR
rule 99   command -> USE ',' use_parameters
rule 100  command -> OPTION ',' option_parameters
rule 101  command -> ECHO STR
rule 102  command -> SAMPLE ',' sample_options
rule 103  command -> CSAMPLE ',' csample_options
rule 104  use_parameters -> PERIOD '=' VARIABLE
rule 105  use_parameters -> PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE
rule 106  sample_options -> RANGE '=' VARIABLE
rule 107  sample_options -> RANGE '=' VARIABLE '[' NUMBER ']'
rule 108  csample_options -> VARIABLE '=' aexpr
rule 109  csample_options -> VARIABLE '=' STR
rule 110  csample_options -> csample_options ',' VARIABLE '=' aexpr
rule 111  csample_options -> csample_options ',' VARIABLE '=' STR
rule 112  csample_options -> sample_options ',' csample_options
rule 113  csample_options -> sample_options
rule 114  option_parameters ->		/* empty */
rule 115  option_parameters -> option_parameters ',' VARIABLE '=' aexpr
rule 116  option_parameters -> VARIABLE '=' aexpr
rule 117  beam_parameters ->		/* empty */
rule 118  beam_parameters -> beam_parameters ',' VARIABLE '=' aexpr
rule 119  beam_parameters -> VARIABLE '=' aexpr
rule 120  beam_parameters -> beam_parameters ',' VARIABLE '=' STR
rule 121  beam_parameters -> VARIABLE '=' STR

Terminals, with rules where they appear

$ (-1)
'(' (40) 7 45 59 67
')' (41) 7 45 59 67
'*' (42) 49 50 52 53 62 83 87
'+' (43) 60 66 80 82 85
',' (44) 39 40 43 48 49 50 68 90 93 95 96 97 98 99 100 102 103 105
    110 111 112 115 118 120
'-' (45) 61 65 81 86
'/' (47) 63 84 105
':' (58) 12 13 14 15 16 17 18 19 20 21 22 23 24 25
';' (59) 2
'<' (60) 68 69
'=' (61) 39 40 41 42 43 44 45 75 76 77 104 105 106 107 108 109 110
    111 115 116 118 119 120 121
'>' (62) 68 71
'[' (91) 74 107
']' (93) 74 107
'^' (94) 64
'{' (123) 88
'}' (125) 88
error (256)
NE (257) 73
LE (258) 70
GE (259) 72
UMINUS (260)
UPLUS (261)
NUMBER (262) 49 50 52 53 57 107
VARIABLE (263) 12 13 14 15 16 17 18 19 20 21 22 23 24 25 37 39 40 41
    42 43 44 48 49 50 51 52 53 58 74 75 76 97 104 105 106 107 108 109
    110 111 115 116 118 119 120 121
VECVAR (264) 77 78 98
FUNC (265) 59
STR (266) 43 44 101 109 111 120 121
MARKER (267) 26
ELEMENT (268) 36
DRIFT (269) 27
DIPOLE (270)
SBEND (271) 28
QUADRUPOLE (272) 29
SEXTUPOLE (273) 30
OCTUPOLE (274) 31
MULTIPOLE (275) 32
SOLENOID (276)
COLLIMATOR (277)
RCOL (278) 34
ECOL (279) 33
LINE (280) 45 95
SEQUENCE (281) 46
SPOILER (282)
ABSORBER (283)
LASER (284) 35
PERIOD (285) 104 105
APERTURE (286)
FILENAME (287)
GAS (288)
PIPE (289)
BEAM (290) 93
OPTION (291) 96 100
PRINT (292) 94 95 96 97 98
RANGE (293) 105 106 107
STOP (294) 92
USE (295) 99
VALUE (296)
ECHO (297) 101
PRINTF (298)
SAMPLE (299) 102
CSAMPLE (300) 103
IF (301) 7
ELSE (302) 4
BEGN (303) 6
END (304) 6
FOR (305)

Nonterminals, with rules where they appear

input (69)
    on left: 1 2, on right: 2 6
stmt (70)
    on left: 3 4 5 6, on right: 2 3 4
if_clause (71)
    on left: 7, on right: 3 4
atomic_stmt (72)
    on left: 8 9 10 11, on right: 5
decl (73)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25,
    on right: 11
marker (74)
    on left: 26, on right: 12
drift (75)
    on left: 27, on right: 13
sbend (76)
    on left: 28, on right: 14
quad (77)
    on left: 29, on right: 15
sextupole (78)
    on left: 30, on right: 16
octupole (79)
    on left: 31, on right: 17
multipole (80)
    on left: 32, on right: 20
ecol (81)
    on left: 33, on right: 19
rcol (82)
    on left: 34, on right: 18
laser (83)
    on left: 35, on right: 22
element (84)
    on left: 36, on right: 21
extension (85)
    on left: 37, on right: 25
parameters (86)
    on left: 38 39 40 41 42 43 44, on right: 27 28 29 30 31 32 33 34
    35 36 37 39 40 43
line (87)
    on left: 45, on right: 23
sequence (88)
    on left: 46, on right: 24
element_seq (89)
    on left: 47 48 49 50 51 52 53, on right: 45 48 49 50
expr (90)
    on left: 54 55 56, on right: 9
aexpr (91)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
   , on right: 7 39 42 54 59 60 61 62 63 64 65 66 67 69 70 71 72 73
    75 82 83 84 85 86 87 90 91 108 110 115 116 118 119
assignment (92)
    on left: 75 76 77, on right: 56
vecexpr (93)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 40 41 55 68 76
    77 80 81 82 83 84 85 86 87
vect (94)
    on left: 88, on right: 79
numbers (95)
    on left: 89 90 91, on right: 88 90
command (96)
    on left: 92 93 94 95 96 97 98 99 100 101 102 103,
    on right: 10
use_parameters (97)
    on left: 104 105, on right: 99
sample_options (98)
    on left: 106 107, on right: 102 112 113
csample_options (99)
    on left: 108 109 110 111 112 113, on right: 103 110 111 112
option_parameters (100)
    on left: 114 115 116, on right: 100 115
beam_parameters (101)
    on left: 117 118 119 120 121, on right: 93 118 120


state 0

    $default	reduce using rule 1 (input)

    input	go to state 1



state 1

    input  ->  input . stmt ';'   (rule 2)

    $   	go to state 232
    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    VECVAR	shift, and go to state 7
    FUNC	shift, and go to state 8
    BEAM	shift, and go to state 9
    OPTION	shift, and go to state 10
    PRINT	shift, and go to state 11
    STOP	shift, and go to state 12
    USE 	shift, and go to state 13
    ECHO	shift, and go to state 14
    SAMPLE	shift, and go to state 15
    CSAMPLE	shift, and go to state 16
    IF  	shift, and go to state 17
    BEGN	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    $default	reduce using rule 8 (atomic_stmt)

    stmt	go to state 21
    if_clause	go to state 22
    atomic_stmt	go to state 23
    decl	go to state 24
    expr	go to state 25
    aexpr	go to state 26
    assignment	go to state 27
    vecexpr	go to state 28
    vect	go to state 29
    command	go to state 30



state 2

    aexpr  ->  '+' . aexpr   (rule 66)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 32



state 3

    aexpr  ->  '-' . aexpr   (rule 65)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 33



state 4

    aexpr  ->  '<' . vecexpr ',' vecexpr '>'   (rule 68)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 35
    vecexpr	go to state 36
    vect	go to state 29



state 5

    aexpr  ->  NUMBER .   (rule 57)

    $default	reduce using rule 57 (aexpr)



state 6

    decl  ->  VARIABLE . ':' marker   (rule 12)
    decl  ->  VARIABLE . ':' drift   (rule 13)
    decl  ->  VARIABLE . ':' sbend   (rule 14)
    decl  ->  VARIABLE . ':' quad   (rule 15)
    decl  ->  VARIABLE . ':' sextupole   (rule 16)
    decl  ->  VARIABLE . ':' octupole   (rule 17)
    decl  ->  VARIABLE . ':' rcol   (rule 18)
    decl  ->  VARIABLE . ':' ecol   (rule 19)
    decl  ->  VARIABLE . ':' multipole   (rule 20)
    decl  ->  VARIABLE . ':' element   (rule 21)
    decl  ->  VARIABLE . ':' laser   (rule 22)
    decl  ->  VARIABLE . ':' line   (rule 23)
    decl  ->  VARIABLE . ':' sequence   (rule 24)
    decl  ->  VARIABLE . ':' extension   (rule 25)
    aexpr  ->  VARIABLE .   (rule 58)
    aexpr  ->  VARIABLE . '[' VARIABLE ']'   (rule 74)
    assignment  ->  VARIABLE . '=' aexpr   (rule 75)
    assignment  ->  VARIABLE . '=' vecexpr   (rule 76)

    ':' 	shift, and go to state 37
    '=' 	shift, and go to state 38
    '[' 	shift, and go to state 39

    $default	reduce using rule 58 (aexpr)



state 7

    assignment  ->  VECVAR . '=' vecexpr   (rule 77)
    vecexpr  ->  VECVAR .   (rule 78)

    '=' 	shift, and go to state 40

    $default	reduce using rule 78 (vecexpr)



state 8

    aexpr  ->  FUNC . '(' aexpr ')'   (rule 59)

    '(' 	shift, and go to state 41



state 9

    command  ->  BEAM . ',' beam_parameters   (rule 93)

    ',' 	shift, and go to state 42



state 10

    command  ->  OPTION . ',' option_parameters   (rule 100)

    ',' 	shift, and go to state 43



state 11

    command  ->  PRINT .   (rule 94)
    command  ->  PRINT . ',' LINE   (rule 95)
    command  ->  PRINT . ',' OPTION   (rule 96)
    command  ->  PRINT . ',' VARIABLE   (rule 97)
    command  ->  PRINT . ',' VECVAR   (rule 98)

    ',' 	shift, and go to state 44

    $default	reduce using rule 94 (command)



state 12

    command  ->  STOP .   (rule 92)

    $default	reduce using rule 92 (command)



state 13

    command  ->  USE . ',' use_parameters   (rule 99)

    ',' 	shift, and go to state 45



state 14

    command  ->  ECHO . STR   (rule 101)

    STR 	shift, and go to state 46



state 15

    command  ->  SAMPLE . ',' sample_options   (rule 102)

    ',' 	shift, and go to state 47



state 16

    command  ->  CSAMPLE . ',' csample_options   (rule 103)

    ',' 	shift, and go to state 48



state 17

    if_clause  ->  IF . '(' aexpr ')'   (rule 7)

    '(' 	shift, and go to state 49



state 18

    stmt  ->  BEGN . input END   (rule 6)

    $default	reduce using rule 1 (input)

    input	go to state 50



state 19

    aexpr  ->  '(' . aexpr ')'   (rule 67)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 51



state 20

    vect  ->  '{' . numbers '}'   (rule 88)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    $default	reduce using rule 89 (numbers)

    aexpr	go to state 52
    numbers	go to state 53



state 21

    input  ->  input stmt . ';'   (rule 2)

    ';' 	shift, and go to state 54



state 22

    stmt  ->  if_clause . stmt   (rule 3)
    stmt  ->  if_clause . stmt ELSE stmt   (rule 4)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    VECVAR	shift, and go to state 7
    FUNC	shift, and go to state 8
    BEAM	shift, and go to state 9
    OPTION	shift, and go to state 10
    PRINT	shift, and go to state 11
    STOP	shift, and go to state 12
    USE 	shift, and go to state 13
    ECHO	shift, and go to state 14
    SAMPLE	shift, and go to state 15
    CSAMPLE	shift, and go to state 16
    IF  	shift, and go to state 17
    BEGN	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    $default	reduce using rule 8 (atomic_stmt)

    stmt	go to state 55
    if_clause	go to state 22
    atomic_stmt	go to state 23
    decl	go to state 24
    expr	go to state 25
    aexpr	go to state 26
    assignment	go to state 27
    vecexpr	go to state 28
    vect	go to state 29
    command	go to state 30



state 23

    stmt  ->  atomic_stmt .   (rule 5)

    $default	reduce using rule 5 (stmt)



state 24

    atomic_stmt  ->  decl .   (rule 11)

    $default	reduce using rule 11 (atomic_stmt)



state 25

    atomic_stmt  ->  expr .   (rule 9)

    $default	reduce using rule 9 (atomic_stmt)



state 26

    expr  ->  aexpr .   (rule 54)
    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '+' 	shift, and go to state 56
    '-' 	shift, and go to state 57
    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 54 (expr)



state 27

    expr  ->  assignment .   (rule 56)

    $default	reduce using rule 56 (expr)



state 28

    expr  ->  vecexpr .   (rule 55)
    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '+' 	shift, and go to state 66
    '-' 	shift, and go to state 67
    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 55 (expr)



state 29

    vecexpr  ->  vect .   (rule 79)

    $default	reduce using rule 79 (vecexpr)



state 30

    atomic_stmt  ->  command .   (rule 10)

    $default	reduce using rule 10 (atomic_stmt)



state 31

    aexpr  ->  VARIABLE .   (rule 58)
    aexpr  ->  VARIABLE . '[' VARIABLE ']'   (rule 74)

    '[' 	shift, and go to state 39

    $default	reduce using rule 58 (aexpr)



state 32

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  '+' aexpr .   (rule 66)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)


    $default	reduce using rule 66 (aexpr)



state 33

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  '-' aexpr .   (rule 65)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)


    $default	reduce using rule 65 (aexpr)



state 34

    vecexpr  ->  VECVAR .   (rule 78)

    $default	reduce using rule 78 (vecexpr)



state 35

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '+' 	shift, and go to state 56
    '-' 	shift, and go to state 57
    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65



state 36

    aexpr  ->  '<' vecexpr . ',' vecexpr '>'   (rule 68)
    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '+' 	shift, and go to state 66
    '-' 	shift, and go to state 67
    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69
    ',' 	shift, and go to state 73



state 37

    decl  ->  VARIABLE ':' . marker   (rule 12)
    decl  ->  VARIABLE ':' . drift   (rule 13)
    decl  ->  VARIABLE ':' . sbend   (rule 14)
    decl  ->  VARIABLE ':' . quad   (rule 15)
    decl  ->  VARIABLE ':' . sextupole   (rule 16)
    decl  ->  VARIABLE ':' . octupole   (rule 17)
    decl  ->  VARIABLE ':' . rcol   (rule 18)
    decl  ->  VARIABLE ':' . ecol   (rule 19)
    decl  ->  VARIABLE ':' . multipole   (rule 20)
    decl  ->  VARIABLE ':' . element   (rule 21)
    decl  ->  VARIABLE ':' . laser   (rule 22)
    decl  ->  VARIABLE ':' . line   (rule 23)
    decl  ->  VARIABLE ':' . sequence   (rule 24)
    decl  ->  VARIABLE ':' . extension   (rule 25)

    VARIABLE	shift, and go to state 74
    MARKER	shift, and go to state 75
    ELEMENT	shift, and go to state 76
    DRIFT	shift, and go to state 77
    SBEND	shift, and go to state 78
    QUADRUPOLE	shift, and go to state 79
    SEXTUPOLE	shift, and go to state 80
    OCTUPOLE	shift, and go to state 81
    MULTIPOLE	shift, and go to state 82
    RCOL	shift, and go to state 83
    ECOL	shift, and go to state 84
    LINE	shift, and go to state 85
    SEQUENCE	shift, and go to state 86
    LASER	shift, and go to state 87

    marker	go to state 88
    drift	go to state 89
    sbend	go to state 90
    quad	go to state 91
    sextupole	go to state 92
    octupole	go to state 93
    multipole	go to state 94
    ecol	go to state 95
    rcol	go to state 96
    laser	go to state 97
    element	go to state 98
    extension	go to state 99
    line	go to state 100
    sequence	go to state 101



state 38

    assignment  ->  VARIABLE '=' . aexpr   (rule 75)
    assignment  ->  VARIABLE '=' . vecexpr   (rule 76)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 102
    vecexpr	go to state 103
    vect	go to state 29



state 39

    aexpr  ->  VARIABLE '[' . VARIABLE ']'   (rule 74)

    VARIABLE	shift, and go to state 104



state 40

    assignment  ->  VECVAR '=' . vecexpr   (rule 77)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 35
    vecexpr	go to state 105
    vect	go to state 29



state 41

    aexpr  ->  FUNC '(' . aexpr ')'   (rule 59)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 106



state 42

    command  ->  BEAM ',' . beam_parameters   (rule 93)

    VARIABLE	shift, and go to state 107

    $default	reduce using rule 117 (beam_parameters)

    beam_parameters	go to state 108



state 43

    command  ->  OPTION ',' . option_parameters   (rule 100)

    VARIABLE	shift, and go to state 109

    $default	reduce using rule 114 (option_parameters)

    option_parameters	go to state 110



state 44

    command  ->  PRINT ',' . LINE   (rule 95)
    command  ->  PRINT ',' . OPTION   (rule 96)
    command  ->  PRINT ',' . VARIABLE   (rule 97)
    command  ->  PRINT ',' . VECVAR   (rule 98)

    VARIABLE	shift, and go to state 111
    VECVAR	shift, and go to state 112
    LINE	shift, and go to state 113
    OPTION	shift, and go to state 114



state 45

    command  ->  USE ',' . use_parameters   (rule 99)

    PERIOD	shift, and go to state 115

    use_parameters	go to state 116



state 46

    command  ->  ECHO STR .   (rule 101)

    $default	reduce using rule 101 (command)



state 47

    command  ->  SAMPLE ',' . sample_options   (rule 102)

    RANGE	shift, and go to state 117

    sample_options	go to state 118



state 48

    command  ->  CSAMPLE ',' . csample_options   (rule 103)

    VARIABLE	shift, and go to state 119
    RANGE	shift, and go to state 117

    sample_options	go to state 120
    csample_options	go to state 121



state 49

    if_clause  ->  IF '(' . aexpr ')'   (rule 7)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 122



state 50

    input  ->  input . stmt ';'   (rule 2)
    stmt  ->  BEGN input . END   (rule 6)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    VECVAR	shift, and go to state 7
    FUNC	shift, and go to state 8
    BEAM	shift, and go to state 9
    OPTION	shift, and go to state 10
    PRINT	shift, and go to state 11
    STOP	shift, and go to state 12
    USE 	shift, and go to state 13
    ECHO	shift, and go to state 14
    SAMPLE	shift, and go to state 15
    CSAMPLE	shift, and go to state 16
    IF  	shift, and go to state 17
    BEGN	shift, and go to state 18
    END 	shift, and go to state 123
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    $default	reduce using rule 8 (atomic_stmt)

    stmt	go to state 21
    if_clause	go to state 22
    atomic_stmt	go to state 23
    decl	go to state 24
    expr	go to state 25
    aexpr	go to state 26
    assignment	go to state 27
    vecexpr	go to state 28
    vect	go to state 29
    command	go to state 30



state 51

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  '(' aexpr . ')'   (rule 67)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65
    ')' 	shift, and go to state 124



state 52

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    numbers  ->  aexpr .   (rule 91)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 91 (numbers)



state 53

    vect  ->  '{' numbers . '}'   (rule 88)
    numbers  ->  numbers . ',' aexpr   (rule 90)

    ',' 	shift, and go to state 125
    '}' 	shift, and go to state 126



state 54

    input  ->  input stmt ';' .   (rule 2)

    $default	reduce using rule 2 (input)



state 55

    stmt  ->  if_clause stmt .   (rule 3)
    stmt  ->  if_clause stmt . ELSE stmt   (rule 4)

    ELSE	shift, and go to state 127

    ELSE	[reduce using rule 3 (stmt)]
    $default	reduce using rule 3 (stmt)



state 56

    aexpr  ->  aexpr '+' . aexpr   (rule 60)
    vecexpr  ->  aexpr '+' . vecexpr   (rule 85)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 128
    vecexpr	go to state 129
    vect	go to state 29



state 57

    aexpr  ->  aexpr '-' . aexpr   (rule 61)
    vecexpr  ->  aexpr '-' . vecexpr   (rule 86)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 130
    vecexpr	go to state 131
    vect	go to state 29



state 58

    aexpr  ->  aexpr '*' . aexpr   (rule 62)
    vecexpr  ->  aexpr '*' . vecexpr   (rule 87)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 132
    vecexpr	go to state 133
    vect	go to state 29



state 59

    aexpr  ->  aexpr '/' . aexpr   (rule 63)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 134



state 60

    aexpr  ->  aexpr '^' . aexpr   (rule 64)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 135



state 61

    aexpr  ->  aexpr '<' . aexpr   (rule 69)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 136



state 62

    aexpr  ->  aexpr '>' . aexpr   (rule 71)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 137



state 63

    aexpr  ->  aexpr NE . aexpr   (rule 73)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 138



state 64

    aexpr  ->  aexpr LE . aexpr   (rule 70)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 139



state 65

    aexpr  ->  aexpr GE . aexpr   (rule 72)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 140



state 66

    vecexpr  ->  vecexpr '+' . vecexpr   (rule 80)
    vecexpr  ->  vecexpr '+' . aexpr   (rule 82)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 141
    vecexpr	go to state 142
    vect	go to state 29



state 67

    vecexpr  ->  vecexpr '-' . vecexpr   (rule 81)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 35
    vecexpr	go to state 143
    vect	go to state 29



state 68

    vecexpr  ->  vecexpr '*' . aexpr   (rule 83)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 144



state 69

    vecexpr  ->  vecexpr '/' . aexpr   (rule 84)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 145



state 70

    aexpr  ->  aexpr '+' . aexpr   (rule 60)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 146



state 71

    aexpr  ->  aexpr '-' . aexpr   (rule 61)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 147



state 72

    aexpr  ->  aexpr '*' . aexpr   (rule 62)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 148



state 73

    aexpr  ->  '<' vecexpr ',' . vecexpr '>'   (rule 68)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 35
    vecexpr	go to state 149
    vect	go to state 29



state 74

    extension  ->  VARIABLE . parameters   (rule 37)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 151



state 75

    marker  ->  MARKER .   (rule 26)

    $default	reduce using rule 26 (marker)



state 76

    element  ->  ELEMENT . parameters   (rule 36)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 152



state 77

    drift  ->  DRIFT . parameters   (rule 27)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 153



state 78

    sbend  ->  SBEND . parameters   (rule 28)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 154



state 79

    quad  ->  QUADRUPOLE . parameters   (rule 29)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 155



state 80

    sextupole  ->  SEXTUPOLE . parameters   (rule 30)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 156



state 81

    octupole  ->  OCTUPOLE . parameters   (rule 31)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 157



state 82

    multipole  ->  MULTIPOLE . parameters   (rule 32)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 158



state 83

    rcol  ->  RCOL . parameters   (rule 34)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 159



state 84

    ecol  ->  ECOL . parameters   (rule 33)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 160



state 85

    line  ->  LINE . '=' '(' element_seq ')'   (rule 45)

    '=' 	shift, and go to state 161



state 86

    sequence  ->  SEQUENCE .   (rule 46)

    $default	reduce using rule 46 (sequence)



state 87

    laser  ->  LASER . parameters   (rule 35)

    VARIABLE	shift, and go to state 150

    $default	reduce using rule 38 (parameters)

    parameters	go to state 162



state 88

    decl  ->  VARIABLE ':' marker .   (rule 12)

    $default	reduce using rule 12 (decl)



state 89

    decl  ->  VARIABLE ':' drift .   (rule 13)

    $default	reduce using rule 13 (decl)



state 90

    decl  ->  VARIABLE ':' sbend .   (rule 14)

    $default	reduce using rule 14 (decl)



state 91

    decl  ->  VARIABLE ':' quad .   (rule 15)

    $default	reduce using rule 15 (decl)



state 92

    decl  ->  VARIABLE ':' sextupole .   (rule 16)

    $default	reduce using rule 16 (decl)



state 93

    decl  ->  VARIABLE ':' octupole .   (rule 17)

    $default	reduce using rule 17 (decl)



state 94

    decl  ->  VARIABLE ':' multipole .   (rule 20)

    $default	reduce using rule 20 (decl)



state 95

    decl  ->  VARIABLE ':' ecol .   (rule 19)

    $default	reduce using rule 19 (decl)



state 96

    decl  ->  VARIABLE ':' rcol .   (rule 18)

    $default	reduce using rule 18 (decl)



state 97

    decl  ->  VARIABLE ':' laser .   (rule 22)

    $default	reduce using rule 22 (decl)



state 98

    decl  ->  VARIABLE ':' element .   (rule 21)

    $default	reduce using rule 21 (decl)



state 99

    decl  ->  VARIABLE ':' extension .   (rule 25)

    $default	reduce using rule 25 (decl)



state 100

    decl  ->  VARIABLE ':' line .   (rule 23)

    $default	reduce using rule 23 (decl)



state 101

    decl  ->  VARIABLE ':' sequence .   (rule 24)

    $default	reduce using rule 24 (decl)



state 102

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    assignment  ->  VARIABLE '=' aexpr .   (rule 75)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '+' 	shift, and go to state 56
    '-' 	shift, and go to state 57
    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 75 (assignment)



state 103

    assignment  ->  VARIABLE '=' vecexpr .   (rule 76)
    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '+' 	shift, and go to state 66
    '-' 	shift, and go to state 67
    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 76 (assignment)



state 104

    aexpr  ->  VARIABLE '[' VARIABLE . ']'   (rule 74)

    ']' 	shift, and go to state 163



state 105

    assignment  ->  VECVAR '=' vecexpr .   (rule 77)
    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '+' 	shift, and go to state 66
    '-' 	shift, and go to state 67
    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 77 (assignment)



state 106

    aexpr  ->  FUNC '(' aexpr . ')'   (rule 59)
    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65
    ')' 	shift, and go to state 164



state 107

    beam_parameters  ->  VARIABLE . '=' aexpr   (rule 119)
    beam_parameters  ->  VARIABLE . '=' STR   (rule 121)

    '=' 	shift, and go to state 165



state 108

    command  ->  BEAM ',' beam_parameters .   (rule 93)
    beam_parameters  ->  beam_parameters . ',' VARIABLE '=' aexpr   (rule 118)
    beam_parameters  ->  beam_parameters . ',' VARIABLE '=' STR   (rule 120)

    ',' 	shift, and go to state 166

    $default	reduce using rule 93 (command)



state 109

    option_parameters  ->  VARIABLE . '=' aexpr   (rule 116)

    '=' 	shift, and go to state 167



state 110

    command  ->  OPTION ',' option_parameters .   (rule 100)
    option_parameters  ->  option_parameters . ',' VARIABLE '=' aexpr   (rule 115)

    ',' 	shift, and go to state 168

    $default	reduce using rule 100 (command)



state 111

    command  ->  PRINT ',' VARIABLE .   (rule 97)

    $default	reduce using rule 97 (command)



state 112

    command  ->  PRINT ',' VECVAR .   (rule 98)

    $default	reduce using rule 98 (command)



state 113

    command  ->  PRINT ',' LINE .   (rule 95)

    $default	reduce using rule 95 (command)



state 114

    command  ->  PRINT ',' OPTION .   (rule 96)

    $default	reduce using rule 96 (command)



state 115

    use_parameters  ->  PERIOD . '=' VARIABLE   (rule 104)
    use_parameters  ->  PERIOD . '=' VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE   (rule 105)

    '=' 	shift, and go to state 169



state 116

    command  ->  USE ',' use_parameters .   (rule 99)

    $default	reduce using rule 99 (command)



state 117

    sample_options  ->  RANGE . '=' VARIABLE   (rule 106)
    sample_options  ->  RANGE . '=' VARIABLE '[' NUMBER ']'   (rule 107)

    '=' 	shift, and go to state 170



state 118

    command  ->  SAMPLE ',' sample_options .   (rule 102)

    $default	reduce using rule 102 (command)



state 119

    csample_options  ->  VARIABLE . '=' aexpr   (rule 108)
    csample_options  ->  VARIABLE . '=' STR   (rule 109)

    '=' 	shift, and go to state 171



state 120

    csample_options  ->  sample_options . ',' csample_options   (rule 112)
    csample_options  ->  sample_options .   (rule 113)

    ',' 	shift, and go to state 172

    ',' 	[reduce using rule 113 (csample_options)]
    $default	reduce using rule 113 (csample_options)



state 121

    command  ->  CSAMPLE ',' csample_options .   (rule 103)
    csample_options  ->  csample_options . ',' VARIABLE '=' aexpr   (rule 110)
    csample_options  ->  csample_options . ',' VARIABLE '=' STR   (rule 111)

    ',' 	shift, and go to state 173

    $default	reduce using rule 103 (command)



state 122

    if_clause  ->  IF '(' aexpr . ')'   (rule 7)
    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65
    ')' 	shift, and go to state 174



state 123

    stmt  ->  BEGN input END .   (rule 6)

    $default	reduce using rule 6 (stmt)



state 124

    aexpr  ->  '(' aexpr ')' .   (rule 67)

    $default	reduce using rule 67 (aexpr)



state 125

    numbers  ->  numbers ',' . aexpr   (rule 90)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 175



state 126

    vect  ->  '{' numbers '}' .   (rule 88)

    $default	reduce using rule 88 (vect)



state 127

    stmt  ->  if_clause stmt ELSE . stmt   (rule 4)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    VECVAR	shift, and go to state 7
    FUNC	shift, and go to state 8
    BEAM	shift, and go to state 9
    OPTION	shift, and go to state 10
    PRINT	shift, and go to state 11
    STOP	shift, and go to state 12
    USE 	shift, and go to state 13
    ECHO	shift, and go to state 14
    SAMPLE	shift, and go to state 15
    CSAMPLE	shift, and go to state 16
    IF  	shift, and go to state 17
    BEGN	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    $default	reduce using rule 8 (atomic_stmt)

    stmt	go to state 176
    if_clause	go to state 22
    atomic_stmt	go to state 23
    decl	go to state 24
    expr	go to state 25
    aexpr	go to state 26
    assignment	go to state 27
    vecexpr	go to state 28
    vect	go to state 29
    command	go to state 30



state 128

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr '+' aexpr .   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 60 (aexpr)



state 129

    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)
    vecexpr  ->  aexpr '+' vecexpr .   (rule 85)

    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 85 (vecexpr)



state 130

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr '-' aexpr .   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 61 (aexpr)



state 131

    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)
    vecexpr  ->  aexpr '-' vecexpr .   (rule 86)

    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 86 (vecexpr)



state 132

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr '*' aexpr .   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 62 (aexpr)



state 133

    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)
    vecexpr  ->  aexpr '*' vecexpr .   (rule 87)


    $default	reduce using rule 87 (vecexpr)



state 134

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr '/' aexpr .   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)

    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 63 (aexpr)



state 135

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr '^' aexpr .   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)


    $default	reduce using rule 64 (aexpr)



state 136

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr '<' aexpr .   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)


    $default	reduce using rule 69 (aexpr)



state 137

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr '>' aexpr .   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)


    $default	reduce using rule 71 (aexpr)



state 138

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    aexpr  ->  aexpr NE aexpr .   (rule 73)


    $default	reduce using rule 73 (aexpr)



state 139

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr LE aexpr .   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)


    $default	reduce using rule 70 (aexpr)



state 140

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr GE aexpr .   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)


    $default	reduce using rule 72 (aexpr)



state 141

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  vecexpr '+' aexpr .   (rule 82)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 82 (vecexpr)



state 142

    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr '+' vecexpr .   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 80 (vecexpr)



state 143

    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr '-' vecexpr .   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 81 (vecexpr)



state 144

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  vecexpr '*' aexpr .   (rule 83)

    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 83 (vecexpr)



state 145

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  vecexpr '/' aexpr .   (rule 84)

    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 84 (vecexpr)



state 146

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr '+' aexpr .   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)

    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 60 (aexpr)



state 147

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr '-' aexpr .   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)

    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 61 (aexpr)



state 148

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr '*' aexpr .   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)

    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 62 (aexpr)



state 149

    aexpr  ->  '<' vecexpr ',' vecexpr . '>'   (rule 68)
    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '+' 	shift, and go to state 66
    '-' 	shift, and go to state 67
    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69
    '>' 	shift, and go to state 177



state 150

    parameters  ->  VARIABLE . '=' vecexpr   (rule 41)
    parameters  ->  VARIABLE . '=' aexpr   (rule 42)
    parameters  ->  VARIABLE . '=' STR   (rule 44)

    '=' 	shift, and go to state 178



state 151

    extension  ->  VARIABLE parameters .   (rule 37)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 37 (extension)



state 152

    element  ->  ELEMENT parameters .   (rule 36)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 36 (element)



state 153

    drift  ->  DRIFT parameters .   (rule 27)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 27 (drift)



state 154

    sbend  ->  SBEND parameters .   (rule 28)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 28 (sbend)



state 155

    quad  ->  QUADRUPOLE parameters .   (rule 29)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 29 (quad)



state 156

    sextupole  ->  SEXTUPOLE parameters .   (rule 30)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 30 (sextupole)



state 157

    octupole  ->  OCTUPOLE parameters .   (rule 31)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 31 (octupole)



state 158

    multipole  ->  MULTIPOLE parameters .   (rule 32)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 32 (multipole)



state 159

    rcol  ->  RCOL parameters .   (rule 34)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 34 (rcol)



state 160

    ecol  ->  ECOL parameters .   (rule 33)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 33 (ecol)



state 161

    line  ->  LINE '=' . '(' element_seq ')'   (rule 45)

    '(' 	shift, and go to state 180



state 162

    laser  ->  LASER parameters .   (rule 35)
    parameters  ->  parameters . ',' VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters . ',' VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters . ',' VARIABLE '=' STR   (rule 43)

    ',' 	shift, and go to state 179

    $default	reduce using rule 35 (laser)



state 163

    aexpr  ->  VARIABLE '[' VARIABLE ']' .   (rule 74)

    $default	reduce using rule 74 (aexpr)



state 164

    aexpr  ->  FUNC '(' aexpr ')' .   (rule 59)

    $default	reduce using rule 59 (aexpr)



state 165

    beam_parameters  ->  VARIABLE '=' . aexpr   (rule 119)
    beam_parameters  ->  VARIABLE '=' . STR   (rule 121)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    STR 	shift, and go to state 181
    '(' 	shift, and go to state 19

    aexpr	go to state 182



state 166

    beam_parameters  ->  beam_parameters ',' . VARIABLE '=' aexpr   (rule 118)
    beam_parameters  ->  beam_parameters ',' . VARIABLE '=' STR   (rule 120)

    VARIABLE	shift, and go to state 183



state 167

    option_parameters  ->  VARIABLE '=' . aexpr   (rule 116)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 184



state 168

    option_parameters  ->  option_parameters ',' . VARIABLE '=' aexpr   (rule 115)

    VARIABLE	shift, and go to state 185



state 169

    use_parameters  ->  PERIOD '=' . VARIABLE   (rule 104)
    use_parameters  ->  PERIOD '=' . VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE   (rule 105)

    VARIABLE	shift, and go to state 186



state 170

    sample_options  ->  RANGE '=' . VARIABLE   (rule 106)
    sample_options  ->  RANGE '=' . VARIABLE '[' NUMBER ']'   (rule 107)

    VARIABLE	shift, and go to state 187



state 171

    csample_options  ->  VARIABLE '=' . aexpr   (rule 108)
    csample_options  ->  VARIABLE '=' . STR   (rule 109)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    STR 	shift, and go to state 188
    '(' 	shift, and go to state 19

    aexpr	go to state 189



state 172

    csample_options  ->  sample_options ',' . csample_options   (rule 112)

    VARIABLE	shift, and go to state 119
    RANGE	shift, and go to state 117

    sample_options	go to state 120
    csample_options	go to state 190



state 173

    csample_options  ->  csample_options ',' . VARIABLE '=' aexpr   (rule 110)
    csample_options  ->  csample_options ',' . VARIABLE '=' STR   (rule 111)

    VARIABLE	shift, and go to state 191



state 174

    if_clause  ->  IF '(' aexpr ')' .   (rule 7)

    $default	reduce using rule 7 (if_clause)



state 175

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    numbers  ->  numbers ',' aexpr .   (rule 90)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 90 (numbers)



state 176

    stmt  ->  if_clause stmt ELSE stmt .   (rule 4)

    $default	reduce using rule 4 (stmt)



state 177

    aexpr  ->  '<' vecexpr ',' vecexpr '>' .   (rule 68)

    $default	reduce using rule 68 (aexpr)



state 178

    parameters  ->  VARIABLE '=' . vecexpr   (rule 41)
    parameters  ->  VARIABLE '=' . aexpr   (rule 42)
    parameters  ->  VARIABLE '=' . STR   (rule 44)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    STR 	shift, and go to state 192
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 193
    vecexpr	go to state 194
    vect	go to state 29



state 179

    parameters  ->  parameters ',' . VARIABLE '=' aexpr   (rule 39)
    parameters  ->  parameters ',' . VARIABLE '=' vecexpr   (rule 40)
    parameters  ->  parameters ',' . VARIABLE '=' STR   (rule 43)

    VARIABLE	shift, and go to state 195



state 180

    line  ->  LINE '=' '(' . element_seq ')'   (rule 45)

    NUMBER	shift, and go to state 196
    VARIABLE	shift, and go to state 197

    $default	reduce using rule 47 (element_seq)

    element_seq	go to state 198



state 181

    beam_parameters  ->  VARIABLE '=' STR .   (rule 121)

    $default	reduce using rule 121 (beam_parameters)



state 182

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    beam_parameters  ->  VARIABLE '=' aexpr .   (rule 119)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 119 (beam_parameters)



state 183

    beam_parameters  ->  beam_parameters ',' VARIABLE . '=' aexpr   (rule 118)
    beam_parameters  ->  beam_parameters ',' VARIABLE . '=' STR   (rule 120)

    '=' 	shift, and go to state 199



state 184

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    option_parameters  ->  VARIABLE '=' aexpr .   (rule 116)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 116 (option_parameters)



state 185

    option_parameters  ->  option_parameters ',' VARIABLE . '=' aexpr   (rule 115)

    '=' 	shift, and go to state 200



state 186

    use_parameters  ->  PERIOD '=' VARIABLE .   (rule 104)
    use_parameters  ->  PERIOD '=' VARIABLE . ',' RANGE '=' VARIABLE '/' VARIABLE   (rule 105)

    ',' 	shift, and go to state 201

    $default	reduce using rule 104 (use_parameters)



state 187

    sample_options  ->  RANGE '=' VARIABLE .   (rule 106)
    sample_options  ->  RANGE '=' VARIABLE . '[' NUMBER ']'   (rule 107)

    '[' 	shift, and go to state 202

    $default	reduce using rule 106 (sample_options)



state 188

    csample_options  ->  VARIABLE '=' STR .   (rule 109)

    $default	reduce using rule 109 (csample_options)



state 189

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    csample_options  ->  VARIABLE '=' aexpr .   (rule 108)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 108 (csample_options)



state 190

    csample_options  ->  csample_options . ',' VARIABLE '=' aexpr   (rule 110)
    csample_options  ->  csample_options . ',' VARIABLE '=' STR   (rule 111)
    csample_options  ->  sample_options ',' csample_options .   (rule 112)

    ',' 	shift, and go to state 173

    ',' 	[reduce using rule 112 (csample_options)]
    $default	reduce using rule 112 (csample_options)



state 191

    csample_options  ->  csample_options ',' VARIABLE . '=' aexpr   (rule 110)
    csample_options  ->  csample_options ',' VARIABLE . '=' STR   (rule 111)

    '=' 	shift, and go to state 203



state 192

    parameters  ->  VARIABLE '=' STR .   (rule 44)

    $default	reduce using rule 44 (parameters)



state 193

    parameters  ->  VARIABLE '=' aexpr .   (rule 42)
    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '+' 	shift, and go to state 56
    '-' 	shift, and go to state 57
    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 42 (parameters)



state 194

    parameters  ->  VARIABLE '=' vecexpr .   (rule 41)
    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '+' 	shift, and go to state 66
    '-' 	shift, and go to state 67
    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 41 (parameters)



state 195

    parameters  ->  parameters ',' VARIABLE . '=' aexpr   (rule 39)
    parameters  ->  parameters ',' VARIABLE . '=' vecexpr   (rule 40)
    parameters  ->  parameters ',' VARIABLE . '=' STR   (rule 43)

    '=' 	shift, and go to state 204



state 196

    element_seq  ->  NUMBER . '*' VARIABLE   (rule 53)

    '*' 	shift, and go to state 205



state 197

    element_seq  ->  VARIABLE .   (rule 51)
    element_seq  ->  VARIABLE . '*' NUMBER   (rule 52)

    '*' 	shift, and go to state 206

    $default	reduce using rule 51 (element_seq)



state 198

    line  ->  LINE '=' '(' element_seq . ')'   (rule 45)
    element_seq  ->  element_seq . ',' VARIABLE   (rule 48)
    element_seq  ->  element_seq . ',' VARIABLE '*' NUMBER   (rule 49)
    element_seq  ->  element_seq . ',' NUMBER '*' VARIABLE   (rule 50)

    ')' 	shift, and go to state 207
    ',' 	shift, and go to state 208



state 199

    beam_parameters  ->  beam_parameters ',' VARIABLE '=' . aexpr   (rule 118)
    beam_parameters  ->  beam_parameters ',' VARIABLE '=' . STR   (rule 120)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    STR 	shift, and go to state 209
    '(' 	shift, and go to state 19

    aexpr	go to state 210



state 200

    option_parameters  ->  option_parameters ',' VARIABLE '=' . aexpr   (rule 115)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    '(' 	shift, and go to state 19

    aexpr	go to state 211



state 201

    use_parameters  ->  PERIOD '=' VARIABLE ',' . RANGE '=' VARIABLE '/' VARIABLE   (rule 105)

    RANGE	shift, and go to state 212



state 202

    sample_options  ->  RANGE '=' VARIABLE '[' . NUMBER ']'   (rule 107)

    NUMBER	shift, and go to state 213



state 203

    csample_options  ->  csample_options ',' VARIABLE '=' . aexpr   (rule 110)
    csample_options  ->  csample_options ',' VARIABLE '=' . STR   (rule 111)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    FUNC	shift, and go to state 8
    STR 	shift, and go to state 214
    '(' 	shift, and go to state 19

    aexpr	go to state 215



state 204

    parameters  ->  parameters ',' VARIABLE '=' . aexpr   (rule 39)
    parameters  ->  parameters ',' VARIABLE '=' . vecexpr   (rule 40)
    parameters  ->  parameters ',' VARIABLE '=' . STR   (rule 43)

    '+' 	shift, and go to state 2
    '-' 	shift, and go to state 3
    '<' 	shift, and go to state 4
    NUMBER	shift, and go to state 5
    VARIABLE	shift, and go to state 31
    VECVAR	shift, and go to state 34
    FUNC	shift, and go to state 8
    STR 	shift, and go to state 216
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20

    aexpr	go to state 217
    vecexpr	go to state 218
    vect	go to state 29



state 205

    element_seq  ->  NUMBER '*' . VARIABLE   (rule 53)

    VARIABLE	shift, and go to state 219



state 206

    element_seq  ->  VARIABLE '*' . NUMBER   (rule 52)

    NUMBER	shift, and go to state 220



state 207

    line  ->  LINE '=' '(' element_seq ')' .   (rule 45)

    $default	reduce using rule 45 (line)



state 208

    element_seq  ->  element_seq ',' . VARIABLE   (rule 48)
    element_seq  ->  element_seq ',' . VARIABLE '*' NUMBER   (rule 49)
    element_seq  ->  element_seq ',' . NUMBER '*' VARIABLE   (rule 50)

    NUMBER	shift, and go to state 221
    VARIABLE	shift, and go to state 222



state 209

    beam_parameters  ->  beam_parameters ',' VARIABLE '=' STR .   (rule 120)

    $default	reduce using rule 120 (beam_parameters)



state 210

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    beam_parameters  ->  beam_parameters ',' VARIABLE '=' aexpr .   (rule 118)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 118 (beam_parameters)



state 211

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    option_parameters  ->  option_parameters ',' VARIABLE '=' aexpr .   (rule 115)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 115 (option_parameters)



state 212

    use_parameters  ->  PERIOD '=' VARIABLE ',' RANGE . '=' VARIABLE '/' VARIABLE   (rule 105)

    '=' 	shift, and go to state 223



state 213

    sample_options  ->  RANGE '=' VARIABLE '[' NUMBER . ']'   (rule 107)

    ']' 	shift, and go to state 224



state 214

    csample_options  ->  csample_options ',' VARIABLE '=' STR .   (rule 111)

    $default	reduce using rule 111 (csample_options)



state 215

    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    csample_options  ->  csample_options ',' VARIABLE '=' aexpr .   (rule 110)

    '+' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '*' 	shift, and go to state 72
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 110 (csample_options)



state 216

    parameters  ->  parameters ',' VARIABLE '=' STR .   (rule 43)

    $default	reduce using rule 43 (parameters)



state 217

    parameters  ->  parameters ',' VARIABLE '=' aexpr .   (rule 39)
    aexpr  ->  aexpr . '+' aexpr   (rule 60)
    aexpr  ->  aexpr . '-' aexpr   (rule 61)
    aexpr  ->  aexpr . '*' aexpr   (rule 62)
    aexpr  ->  aexpr . '/' aexpr   (rule 63)
    aexpr  ->  aexpr . '^' aexpr   (rule 64)
    aexpr  ->  aexpr . '<' aexpr   (rule 69)
    aexpr  ->  aexpr . LE aexpr   (rule 70)
    aexpr  ->  aexpr . '>' aexpr   (rule 71)
    aexpr  ->  aexpr . GE aexpr   (rule 72)
    aexpr  ->  aexpr . NE aexpr   (rule 73)
    vecexpr  ->  aexpr . '+' vecexpr   (rule 85)
    vecexpr  ->  aexpr . '-' vecexpr   (rule 86)
    vecexpr  ->  aexpr . '*' vecexpr   (rule 87)

    '+' 	shift, and go to state 56
    '-' 	shift, and go to state 57
    '*' 	shift, and go to state 58
    '/' 	shift, and go to state 59
    '^' 	shift, and go to state 60
    '<' 	shift, and go to state 61
    '>' 	shift, and go to state 62
    NE  	shift, and go to state 63
    LE  	shift, and go to state 64
    GE  	shift, and go to state 65

    $default	reduce using rule 39 (parameters)



state 218

    parameters  ->  parameters ',' VARIABLE '=' vecexpr .   (rule 40)
    vecexpr  ->  vecexpr . '+' vecexpr   (rule 80)
    vecexpr  ->  vecexpr . '-' vecexpr   (rule 81)
    vecexpr  ->  vecexpr . '+' aexpr   (rule 82)
    vecexpr  ->  vecexpr . '*' aexpr   (rule 83)
    vecexpr  ->  vecexpr . '/' aexpr   (rule 84)

    '+' 	shift, and go to state 66
    '-' 	shift, and go to state 67
    '*' 	shift, and go to state 68
    '/' 	shift, and go to state 69

    $default	reduce using rule 40 (parameters)



state 219

    element_seq  ->  NUMBER '*' VARIABLE .   (rule 53)

    $default	reduce using rule 53 (element_seq)



state 220

    element_seq  ->  VARIABLE '*' NUMBER .   (rule 52)

    $default	reduce using rule 52 (element_seq)



state 221

    element_seq  ->  element_seq ',' NUMBER . '*' VARIABLE   (rule 50)

    '*' 	shift, and go to state 225



state 222

    element_seq  ->  element_seq ',' VARIABLE .   (rule 48)
    element_seq  ->  element_seq ',' VARIABLE . '*' NUMBER   (rule 49)

    '*' 	shift, and go to state 226

    $default	reduce using rule 48 (element_seq)



state 223

    use_parameters  ->  PERIOD '=' VARIABLE ',' RANGE '=' . VARIABLE '/' VARIABLE   (rule 105)

    VARIABLE	shift, and go to state 227



state 224

    sample_options  ->  RANGE '=' VARIABLE '[' NUMBER ']' .   (rule 107)

    $default	reduce using rule 107 (sample_options)



state 225

    element_seq  ->  element_seq ',' NUMBER '*' . VARIABLE   (rule 50)

    VARIABLE	shift, and go to state 228



state 226

    element_seq  ->  element_seq ',' VARIABLE '*' . NUMBER   (rule 49)

    NUMBER	shift, and go to state 229



state 227

    use_parameters  ->  PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE . '/' VARIABLE   (rule 105)

    '/' 	shift, and go to state 230



state 228

    element_seq  ->  element_seq ',' NUMBER '*' VARIABLE .   (rule 50)

    $default	reduce using rule 50 (element_seq)



state 229

    element_seq  ->  element_seq ',' VARIABLE '*' NUMBER .   (rule 49)

    $default	reduce using rule 49 (element_seq)



state 230

    use_parameters  ->  PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE '/' . VARIABLE   (rule 105)

    VARIABLE	shift, and go to state 231



state 231

    use_parameters  ->  PERIOD '=' VARIABLE ',' RANGE '=' VARIABLE '/' VARIABLE .   (rule 105)

    $default	reduce using rule 105 (use_parameters)



state 232

    $   	go to state 233



state 233

    $default	accept
