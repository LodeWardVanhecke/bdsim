// BDSExtractBunch
// Bunch format interfacing to PLACET output file
// G.A.Blair (RHUL) 10.12.01
// adapted from code supplied by D.Schulte (CERN)

#include "BDSExtractBunchO.hh"

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <time.h>

#include <tcl.h>
#include <tk.h>


BDSExtractBunchO::BDSExtractBunchO(char* ExtractBunchInputFilename )
{
  //                  Number of bunches----| 
  read_beam_file(ExtractBunchInputFilename,0);
}

/*

void 
BDSExtractBunchO::bunch_make(int n_bunch,int n_slice,int n_macro,int n_field)
{
  bunches=n_bunch;
  slices_per_bunch=n_slice;
  macroparticles=n_macro;
  n_slice*=n_macro*n_bunch;

 
  slices=n_slice;
 
  particle=(PARTICLEB*)malloc(sizeof(PARTICLEB)*n_slice);
  sigma=(R_MATRIXB*)malloc(sizeof(R_MATRIXB)*n_slice);
  sigma_xx=(R_MATRIXB*)malloc(sizeof(R_MATRIXB)*n_slice);
  sigma_xy=(R_MATRIXB*)malloc(sizeof(R_MATRIXB)*n_slice);
  z_position=(double*)malloc(sizeof(double)*n_slice);
  
  // (*particle)[i]=(PARTICLEB*)malloc(sizeof(PARTICLEB));
  //  (*sigma)[i]=(R_MATRIXB*)malloc(sizeof(R_MATRIXB));
  //  (*sigma_xx)[i]=(R_MATRIXB*)malloc(sizeof(R_MATRIXB));
  //  (*sigma_xy)[i]=(R_MATRIXB*)malloc(sizeof(R_MATRIXB));

  z_position=(double*)malloc(sizeof(double)*n_slice);

  
}

void BDSExtractBunchO::read_beam_file(char *name,int ibunch0)
{
  FILE *file;
  char buffer[1000],*point;
  int nbunch,nslice,nmacro,ibunch,islice,imacro,k=0;
  //   BEAM *beam;

  file=fopen(name,"r");
  point=fgets(buffer,1000,file);
  nbunch=strtol(point,&point,10);
  nslice=strtol(point,&point,10);
  nmacro=strtol(point,&point,10);
  if (nmacro==0) {
    nmacro=1;
  }
  for (ibunch=0;ibunch<ibunch0;ibunch++){
    for (islice=0;islice<nslice;islice++){
      for (imacro=0;imacro<nmacro;imacro++){
	point=fgets(buffer,1000,file);
      }
    }
    point=fgets(buffer,1000,file);
  }

  G4cout<<"extractbunch: nslice="<<nslice<<" nmacro="<<nmacro<<G4endl;

  bunch_make(1,nslice,nmacro,0);

  
  for (islice=0;islice<nslice;islice++){
    for (imacro=0;imacro<nmacro;imacro++){
      point=fgets(buffer,1000,file);

      G4cout<<" point="<<point<<G4endl;

      z_position[islice]=strtod(point,&point);

      G4cout<<" zpos="<<z_position[islice]<<G4endl;


      
      particle[k].wgt=strtod(point,&point);
      particle[k].energy=strtod(point,&point);
      particle[k].x=strtod(point,&point);
      particle[k].xp=strtod(point,&point);
      particle[k].y=strtod(point,&point);
      particle[k].yp=strtod(point,&point);
      sigma_xx[k].r11=strtod(point,&point);
      sigma_xx[k].r12=strtod(point,&point);
      sigma_xx[k].r22=strtod(point,&point);
      sigma_xx[k].r21=sigma_xx[k].r12;
      sigma[k].r11=strtod(point,&point);
      sigma[k].r12=strtod(point,&point);
      sigma[k].r22=strtod(point,&point);
      sigma[k].r21=sigma[k].r12;
      sigma_xy[k].r11=strtod(point,&point);
      sigma_xy[k].r12=strtod(point,&point);
      sigma_xy[k].r21=strtod(point,&point);
      sigma_xy[k].r22=strtod(point,&point);
      
      k++;
    }
  }
  
  fclose(file);

}

*/

BDSExtractBunchO::~BDSExtractBunchO()
{
  //  delete[]  z_position;
}

