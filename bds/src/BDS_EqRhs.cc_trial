#include "G4MagneticField.hh"
#include "G4Mag_EqRhs.hh"
#include "G4EquationOfMotion.hh"
#include "BDS_EqRhs.hh"
#include "BDS_SbendField.hh"
#include "BDSGlobalConstants.hh"

const G4double G4Mag_EqRhs::fUnitConstant = 0.299792458 * (GeV/(tesla*m)); 

// Constructor Implementation
//
BDS_EqRhs::BDS_EqRhs( BDS_SbendField *magField ) 
   : G4Mag_EqRhs(magField)
{ 
  LocalRadius=magField->GetLocalRadius()*MomentumXc/BDSGlobals
    ->GetAcceleratorType()->GetBeamTotalEnergy()
}


G4double BDS_EqRhs::GetKappa()
{
   return fUnitConstant*particleCharge/MomentumXc; //  B must be in Tesla
}


G4double BDS_EqRhs::GetLocalRadius()
{
   return LocalRadius;
}

*/

BDS_EqRhs::~BDS_EqRhs() { }
