
#ifndef myQuadrupole_h
#define myQuadrupole_h 1

#include "globals.hh"
#include "myAcceleratorComponent.hh"
#include "myMultipoleField.hh"
#include "G4MagneticField.hh"
#include "myMaterials.hh"
#include "myQuadStepper.hh"
#include "G4FieldManager.hh"
#include "G4ChordFinder.hh"
#include "G4UniformMagField.hh"
#include "G4VisAttributes.hh"
#include "G4Mag_UsualEqRhs.hh"
#include "G4Tubs.hh"
#include "BDSMultipole.hh"
#include "myAcceleratorComponent.hh"
#include "G4Box.hh"

class myQuadrupole :public myAcceleratorComponent
{

  public:
      //	Constructor taking the id of the dipole, the length
      //	(meter) and curvature (1/meter) of the dipole geometry,
      //	and the vertical magnetic field in Tesla.
  myQuadrupole (G4String& id, G4double len, G4double bpRad,G4double bGrad);

  ~myQuadrupole();

  void BuildOuterFieldManager();
  void QuadLogicalVolume();

  G4VisAttributes* SetVisAttributes();

protected:
 
private:
  myQuadStepper* itsStepper;
  G4ChordFinder* itsChordFinder;
  G4MagneticField* itsMagField;
  G4Mag_UsualEqRhs* itsEqRhs;
  G4FieldManager* itsBPFieldMgr;
  G4Box* itsBox;

  G4FieldManager* itsCoarseFieldMgr;
  G4ChordFinder* itsCoarseChordFinder;


};


#endif
