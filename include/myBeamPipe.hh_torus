
#ifndef myBeamPipe_h
#define myBeamPipe_h 1

#include"globals.hh"
#include "myGlobals.hh"
#include "myMaterials.hh"
#include "G4LogicalVolume.hh"

#include "G4FieldManager.hh"
#include "G4ChordFinder.hh"
#include "G4Mag_UsualEqRhs.hh"
#include "G4UserLimits.hh"
#include "G4VisAttributes.hh"
#include "G4UniformMagField.hh"
#include "G4IntersectionSolid.hh"
#include "G4VSolid.hh"
#include "G4Torus.hh"
#include "G4Tubs.hh"

class myBeamPipe
{
  public:
  //myBeamPipe(const G4String& aName, G4double aLength, G4VSolid* aSolid=NULL);
 myBeamPipe(const G4String& aName, G4double aLength, 
             G4double angle=0);
    ~myBeamPipe();

   G4LogicalVolume* GetLogicalVolume();
   G4LogicalVolume* GetInnerLogicalVolume();
   G4ThreeVector GetPos();
   G4RotationMatrix* GetRot();

  protected:

  private:
  G4LogicalVolume* itsLogicalVolume;
  G4LogicalVolume* itsInnerLogicalVolume;
  G4VisAttributes* SetVisAttributes();


  // field related objects:
  G4UserLimits* itsUserLimits;
  G4VisAttributes* itsVisAttributes;

  G4ThreeVector itsPos;
  G4RotationMatrix* itsRot;
  G4Torus* itsTorus;
  G4Torus* itsInnerTorus;
  G4Tubs* itsTube;
  G4Tubs* itsInnerTube;
};

#endif
