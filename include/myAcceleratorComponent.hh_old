// gab:

#ifndef myAcceleratorComponent_h
#define myAcceleratorComponent_h 1

#include <string>
#include "G4LogicalVolume.hh"
#include "G4VisAttributes.hh"
#include "G4LogicalVolume.hh"
#include "globals.hh"
#include "myGlobals.hh"
#include "myBeamPipe.hh"

typedef void (* BFN)();
 
class myAcceleratorComponent 
{
  public:
      virtual ~myAcceleratorComponent ();

      //	Returns the geometry length of the component.
    const G4double GetLength () const;
    const G4String GetName () const;
    const G4double GetAngle () const;
    G4LogicalVolume* GetG4LogicalVolume() const;
    myAcceleratorComponent();

    myAcceleratorComponent (
              G4String& aName, 
              G4double aLength,
              G4double aBpRadius,
              G4double aXAper,
              G4double aYAper,
              G4VisAttributes* aVisAtt,
              G4double angle=0.);


       void SetName(G4String aName);
       void SetLength(G4double aLength);
       G4VisAttributes* GetVisAttributes()const;
       G4LogicalVolume* itsOuterLogicalVolume;

  protected:
       G4String itsName;
       G4double itsLength;
       G4double itsBpRadius;
       G4double itsXAper;
       G4double itsYAper;
       G4double itsAngle;
       myBeamPipe* itsBeamPipe;

private:
      G4VisAttributes* itsVisAttributes;

};

// Class myAcceleratorComponent 

inline myAcceleratorComponent::myAcceleratorComponent (
G4String& aName,G4double aLength, 
  G4double aBpRadius,G4double aXAper,G4double aYAper, 
  G4VisAttributes* aVisAtt,G4double angle  ): 
      itsName(aName),itsLength(aLength),itsBpRadius(aBpRadius),
   itsXAper(aXAper),itsYAper(aYAper),
   itsVisAttributes(aVisAtt),itsAngle(angle){};


inline const G4double myAcceleratorComponent::GetLength () const
{
	return itsLength;
}
inline const G4double myAcceleratorComponent::GetAngle () const
{
	return itsAngle;
}

inline const G4String myAcceleratorComponent::GetName () const
{
	return itsName;
}

inline G4LogicalVolume* myAcceleratorComponent::GetG4LogicalVolume() const
{
        return itsOuterLogicalVolume;
}

inline G4VisAttributes* myAcceleratorComponent::GetVisAttributes() const
{
        return itsVisAttributes;
}
#endif
